<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jeen's techlog]]></title>
  <link href="http://JEEN.github.com/atom.xml" rel="self"/>
  <link href="http://JEEN.github.com/"/>
  <updated>2012-01-13T19:13:26+09:00</updated>
  <id>http://JEEN.github.com/</id>
  <author>
    <name><![CDATA[Jeen Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Picasa Upload Script II]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/13/picasa-upload-script-ii/"/>
    <updated>2012-01-13T18:36:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/13/picasa-upload-script-ii</id>
    <content type="html"><![CDATA[<figure class='code'><figcaption><span>picasa-uploader.pl</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'><span class="nb">package</span> <span class="n">PicasaUploader</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Any::</span><span class="n">Moose</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">namespace::</span><span class="n">autoclean</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Config::</span><span class="n">Pit</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">LWP::</span><span class="n">UserAgent</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Net::Google::</span><span class="n">AuthSub</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">MIME::</span><span class="n">Types</span> <span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">user_id</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="s">&#39;default&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">album_id</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="s">&#39;default&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">files</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;ArrayRef&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="o">[]</span> <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">google_auth</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;rw&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;Net::Google::AuthSub&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Net::Google::</span><span class="n">AuthSub</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
</span><span class='line'>            <span class="n">service</span> <span class="o">=&gt;</span> <span class="s">&#39;lh2&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">source</span>  <span class="o">=&gt;</span> <span class="s">&#39;my-picasauploader-0.1&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="s">&#39;_ua&#39;</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;rw&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;LWP::UserAgent&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">LWP::</span><span class="n">UserAgent</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="n">cookie_jar</span> <span class="o">=&gt;</span> <span class="p">{}</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="s">&#39;config&#39;</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>          <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>         <span class="o">=&gt;</span> <span class="s">&#39;HashRef&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">lazy_build</span>  <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">BUILD</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">auth</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">_build_config</span> <span class="p">{</span>
</span><span class='line'>    <span class="nn">Config::Pit::</span><span class="n">pit_get</span><span class="p">(</span><span class="s">&#39;google.com&#39;</span><span class="p">,</span> <span class="nb">require</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>       <span class="n">username</span> <span class="o">=&gt;</span> <span class="s">&#39;your username on google.com&#39;</span><span class="p">,</span>
</span><span class='line'>       <span class="n">password</span> <span class="o">=&gt;</span> <span class="s">&#39;your password on google.com&#39;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">auth</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">google_auth</span><span class="o">-&gt;</span><span class="n">login</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">config</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">username</span><span class="p">},</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">config</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">password</span><span class="p">});</span>
</span><span class='line'>    <span class="nb">die</span> <span class="s">&quot;Login Failed: &quot;</span><span class="o">.</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="n">error</span> <span class="k">unless</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="n">is_success</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">upload_files</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="k">my</span> <span class="nv">$file_path</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">files</span> <span class="p">})</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$link</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">upload_file</span><span class="p">(</span><span class="nv">$file_path</span><span class="p">);</span>
</span><span class='line'>        <span class="k">print</span> <span class="nv">$link</span><span class="o">.</span><span class="s">&quot;\n&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">upload_file</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$file_path</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$file</span> <span class="o">=</span> <span class="nn">Path::Class::</span><span class="n">File</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">$file_path</span><span class="p">);</span>
</span><span class='line'>    <span class="nb">die</span> <span class="s">&quot;File Not Found : $file&quot;</span> <span class="k">unless</span> <span class="o">-</span><span class="n">f</span> <span class="nv">$file</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$post_url</span> <span class="o">=</span> <span class="nb">sprintf</span> <span class="s">&#39;https://picasaweb.google.com/data/feed/api/user/%s/albumid/%s&#39;</span><span class="p">,</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">user_id</span><span class="p">,</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">album_id</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$mime_type</span><span class="p">,</span> <span class="nv">$encoding</span><span class="p">)</span> <span class="o">=</span> <span class="nn">MIME::Types::</span><span class="n">by_suffix</span><span class="p">(</span><span class="nv">$file</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$content</span> <span class="o">=</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="n">slurp</span><span class="p">;</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_ua</span><span class="o">-&gt;</span><span class="n">post</span><span class="p">(</span><span class="nv">$post_url</span><span class="p">,</span>
</span><span class='line'>        <span class="nv">%</span><span class="p">{</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">google_auth</span><span class="o">-&gt;</span><span class="n">auth_params</span> <span class="p">},</span>
</span><span class='line'>        <span class="n">Content_Type</span>   <span class="o">=&gt;</span> <span class="nv">$mime_type</span><span class="p">,</span>
</span><span class='line'>        <span class="n">Slug</span>           <span class="o">=&gt;</span> <span class="nv">$file</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">,</span>
</span><span class='line'>        <span class="n">Content</span>        <span class="o">=&gt;</span> <span class="nv">$content</span><span class="p">,</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nb">die</span> <span class="s">&#39;UPLOAD Failed : &#39;</span><span class="o">.</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">status_line</span> <span class="k">unless</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="n">is_success</span><span class="p">;</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$link</span><span class="p">)</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">decoded_content</span><span class="o">=~</span><span class="sr">/content type.*?src=&#39;(.*?)&#39;/gsm</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$link</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">meta</span><span class="o">-&gt;</span><span class="n">make_immutable</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nb">package</span> <span class="n">main</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$uploader</span> <span class="o">=</span> <span class="n">PicasaUploader</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="n">files</span> <span class="o">=&gt;</span> <span class="o">\</span><span class="nv">@ARGV</span> <span class="p">);</span>
</span><span class='line'><span class="nv">$uploader</span><span class="o">-&gt;</span><span class="n">upload_files</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  <a href="http://aanoaa.github.com/blog/2012/01/03/picasa-upload-script/">@aanoaa 님의 글</a>에서 Picasa Uploader 스크립트를 소개했었는데요. <code>PicasaUploader</code> 라고 package 로 정의해서 쓰도록 했습니다.
  거기에 <a href="https://metacpan.org/module/Config::Pit">Config::Pit</a> 을 써서 계정정보를 다루도록 했구요.
  심심해서 그냥 약간 개량해봤습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FreeBSD 8.2 STABLE - CPAN Error]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/05/freebsd-8-dot-2-stable-cpan-error/"/>
    <updated>2012-01-05T22:32:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/05/freebsd-8-dot-2-stable-cpan-error</id>
    <content type="html"><![CDATA[<p>  회사업무차 <code>FreeBSD 8.2 STABLE</code> OS 를 사용하는 서버에서 CPAN 사용시 에러가 발생했습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cpan Module::Install
</span><span class='line'>Reading <span class="s1">&#39;/home/jeen/.cpan/sources/authors/01mailrc.txt.gz&#39;</span>
</span><span class='line'>............................................................................DONE
</span><span class='line'>Reading <span class="s1">&#39;/home/jeen/.cpan/sources/modules/02packages.details.txt.gz&#39;</span>
</span><span class='line'>  Database was generated on Thu, 05 Jan 2012 05:12:02 GMT
</span><span class='line'>............................................................................DONE
</span><span class='line'>Reading <span class="s1">&#39;/home/jeen/.cpan/sources/modules/03modlist.data.gz&#39;</span>
</span><span class='line'>Can<span class="s1">&#39;t locate object method &quot;data&quot; via package &quot;CPAN::Modulelist&quot; (perhaps you forgot to load &quot;CPAN::Modulelist&quot;?) at (eval 24) line 1.</span>
</span><span class='line'><span class="s1"> at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Index.pm line 524</span>
</span><span class='line'><span class="s1"> CPAN::Index::rd_modlist(&#39;</span>CPAN::Index<span class="s1">&#39;, &#39;</span>/home/jeen/.cpan/sources/modules/03modlist.data.gz<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Index.pm line 85</span>
</span><span class='line'><span class="s1"> CPAN::Index::reload(&#39;</span>CPAN::Index<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN.pm line 976</span>
</span><span class='line'><span class="s1"> CPAN::exists(&#39;</span><span class="nv">CPAN</span><span class="o">=</span>HASH<span class="o">(</span>0x801fe27f8<span class="o">)</span><span class="s1">&#39;, &#39;</span>CPAN::Module<span class="s1">&#39;, &#39;</span>Module::Install<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Shell.pm line 1256</span>
</span><span class='line'><span class="s1"> CPAN::Shell::expandany(&#39;</span>CPAN::Shell<span class="s1">&#39;, &#39;</span>Module::Install<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Shell.pm line 1681</span>
</span><span class='line'><span class="s1"> CPAN::Shell::rematein(&#39;</span>CPAN::Shell<span class="s1">&#39;, &#39;</span>install<span class="s1">&#39;, &#39;</span>Module::Install<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Shell.pm line 1977</span>
</span><span class='line'><span class="s1"> CPAN::Shell::__ANON__(&#39;</span>CPAN::Shell<span class="s1">&#39;, &#39;</span>Module::Install<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/App/Cpan.pm line 459</span>
</span><span class='line'><span class="s1"> App::Cpan::__ANON__(&#39;</span>Module::Install<span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/App/Cpan.pm line 468</span>
</span><span class='line'><span class="s1"> App::Cpan::_default(&#39;</span>ARRAY<span class="o">(</span>0x800e92780<span class="o">)</span><span class="s1">&#39;, &#39;</span>HASH<span class="o">(</span>0x801fe7d38<span class="o">)</span><span class="s1">&#39;) called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/App/Cpan.pm line 386</span>
</span><span class='line'><span class="s1"> App::Cpan::run(&#39;</span>App::Cpan<span class="s1">&#39;, &#39;</span>Module::Install<span class="err">&#39;</span><span class="o">)</span> called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/bin/cpan line 11
</span></code></pre></td></tr></table></div></figure>


<p>  마땅히 어떻게 <code>cpan</code> 자체가 안되니, 다른 CPAN 모듈 설치도 안되고&#8230;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -L http://cpanmin.us | perl - --self-upgrade
</span></code></pre></td></tr></table></div></figure>


<p>  그래서 일단은 그냥 <code>cpanm</code> 을 설치하고 필요한 모듈들을 설치했습니다. 하지만 여전히 <code>cpan</code> 으로 모듈을 설치하려면 위처럼 에러가 뜨니 아직도 찜찜하기 그지 없네요.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>uname -a
</span><span class='line'>FreeBSD xxx.xxxxx.kr 8.2-STABLE FreeBSD 8.2-STABLE <span class="c">#1: Wed Apr 13 13:10:49 KST 2011     root@xxx.xxxx.kr:/usr/obj/usr/src/sys/GENERIC  amd64</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>perl -V
</span><span class='line'>Summary of my perl5 <span class="o">(</span>revision 5 version 14 subversion 2<span class="o">)</span> configuration:
</span><span class='line'>
</span><span class='line'>  Platform:
</span><span class='line'>    <span class="nv">osname</span><span class="o">=</span>freebsd, <span class="nv">osvers</span><span class="o">=</span>8.2-stable, <span class="nv">archname</span><span class="o">=</span>amd64-freebsd
</span><span class='line'>    <span class="nv">uname</span><span class="o">=</span><span class="s1">&#39;freebsd xxx.xxxxx.kr 8.2-stable freebsd 8.2-stable #1: wed apr 13 13:10:49 kst 2011 root@xxx.xxxx.kr:usrobjusrsrcsysgeneric amd64 &#39;</span>
</span><span class='line'>    <span class="nv">config_args</span><span class="o">=</span><span class="s1">&#39;-de -Dprefix=/home/jeen/perl5/perlbrew/perls/perl-5.14.2&#39;</span>
</span><span class='line'>    <span class="nv">hint</span><span class="o">=</span>recommended, <span class="nv">useposix</span><span class="o">=</span><span class="nb">true</span>, <span class="nv">d_sigaction</span><span class="o">=</span>define
</span><span class='line'>    <span class="nv">useithreads</span><span class="o">=</span>undef, <span class="nv">usemultiplicity</span><span class="o">=</span>undef
</span><span class='line'>    <span class="nv">useperlio</span><span class="o">=</span>define, <span class="nv">d_sfio</span><span class="o">=</span>undef, <span class="nv">uselargefiles</span><span class="o">=</span>define, <span class="nv">usesocks</span><span class="o">=</span>undef
</span><span class='line'>    <span class="nv">use64bitint</span><span class="o">=</span>define, <span class="nv">use64bitall</span><span class="o">=</span>define, <span class="nv">uselongdouble</span><span class="o">=</span>undef
</span><span class='line'>    <span class="nv">usemymalloc</span><span class="o">=</span>n, <span class="nv">bincompat5005</span><span class="o">=</span>undef
</span><span class='line'>  Compiler:
</span><span class='line'>    <span class="nv">cc</span><span class="o">=</span><span class="s1">&#39;cc&#39;</span>, <span class="nv">ccflags</span> <span class="o">=</span><span class="s1">&#39;-DHAS_FPSETMASK -DHAS_FLOATINGPOINT_H -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include&#39;</span>,
</span><span class='line'>    <span class="nv">optimize</span><span class="o">=</span><span class="s1">&#39;-O&#39;</span>,
</span><span class='line'>    <span class="nv">cppflags</span><span class="o">=</span><span class="s1">&#39;-DHAS_FPSETMASK -DHAS_FLOATINGPOINT_H -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include&#39;</span>
</span><span class='line'>    <span class="nv">ccversion</span><span class="o">=</span><span class="s1">&#39;&#39;</span>, <span class="nv">gccversion</span><span class="o">=</span><span class="s1">&#39;4.2.1 20070719  [FreeBSD]&#39;</span>, <span class="nv">gccosandvers</span><span class="o">=</span><span class="s1">&#39;&#39;</span>
</span><span class='line'>    <span class="nv">intsize</span><span class="o">=</span>4, <span class="nv">longsize</span><span class="o">=</span>8, <span class="nv">ptrsize</span><span class="o">=</span>8, <span class="nv">doublesize</span><span class="o">=</span>8, <span class="nv">byteorder</span><span class="o">=</span>12345678
</span><span class='line'>    <span class="nv">d_longlong</span><span class="o">=</span>define, <span class="nv">longlongsize</span><span class="o">=</span>8, <span class="nv">d_longdbl</span><span class="o">=</span>define, <span class="nv">longdblsize</span><span class="o">=</span>16
</span><span class='line'>    <span class="nv">ivtype</span><span class="o">=</span><span class="s1">&#39;long&#39;</span>, <span class="nv">ivsize</span><span class="o">=</span>8, <span class="nv">nvtype</span><span class="o">=</span><span class="s1">&#39;double&#39;</span>, <span class="nv">nvsize</span><span class="o">=</span>8, <span class="nv">Off_t</span><span class="o">=</span><span class="s1">&#39;off_t&#39;</span>, <span class="nv">lseeksize</span><span class="o">=</span>8
</span><span class='line'>    <span class="nv">alignbytes</span><span class="o">=</span>8, <span class="nv">prototype</span><span class="o">=</span>define
</span><span class='line'>  Linker and Libraries:
</span><span class='line'>    <span class="nv">ld</span><span class="o">=</span><span class="s1">&#39;cc&#39;</span>, <span class="nv">ldflags</span> <span class="o">=</span><span class="s1">&#39;-Wl,-E  -fstack-protector -L/usr/local/lib&#39;</span>
</span><span class='line'>    <span class="nv">libpth</span><span class="o">=</span>/usr/lib /usr/local/lib
</span><span class='line'>    <span class="nv">libs</span><span class="o">=</span>-lm -lcrypt -lutil -lc
</span><span class='line'>    <span class="nv">perllibs</span><span class="o">=</span>-lm -lcrypt -lutil -lc
</span><span class='line'>    <span class="nv">libc</span><span class="o">=</span>, <span class="nv">so</span><span class="o">=</span>so, <span class="nv">useshrplib</span><span class="o">=</span><span class="nb">false</span>, <span class="nv">libperl</span><span class="o">=</span>libperl.a
</span><span class='line'>    <span class="nv">gnulibc_version</span><span class="o">=</span><span class="s1">&#39;&#39;</span>
</span><span class='line'>  Dynamic Linking:
</span><span class='line'>    <span class="nv">dlsrc</span><span class="o">=</span>dl_dlopen.xs, <span class="nv">dlext</span><span class="o">=</span>so, <span class="nv">d_dlsymun</span><span class="o">=</span>undef, <span class="nv">ccdlflags</span><span class="o">=</span><span class="s1">&#39; &#39;</span>
</span><span class='line'>    <span class="nv">cccdlflags</span><span class="o">=</span><span class="s1">&#39;-DPIC -fPIC&#39;</span>, <span class="nv">lddlflags</span><span class="o">=</span><span class="s1">&#39;-shared  -L/usr/local/lib -fstack-protector&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Characteristics of this binary <span class="o">(</span>from libperl<span class="o">)</span>:
</span><span class='line'>  Compile-time options: PERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP
</span><span class='line'>                        PERL_PRESERVE_IVUV USE_64_BIT_ALL USE_64_BIT_INT
</span><span class='line'>                        USE_LARGE_FILES USE_PERLIO USE_PERL_ATOF
</span><span class='line'>  Built under freebsd
</span><span class='line'>  Compiled at Jan  5 2012 15:51:41
</span><span class='line'>  %ENV:
</span><span class='line'>    <span class="nv">PERLBREW_BASHRC_VERSION</span><span class="o">=</span><span class="s2">&quot;0.39&quot;</span>
</span><span class='line'>    <span class="nv">PERLBREW_HOME</span><span class="o">=</span><span class="s2">&quot;/home/jeen/.perlbrew&quot;</span>
</span><span class='line'>    <span class="nv">PERLBREW_MANPATH</span><span class="o">=</span><span class="s2">&quot;/home/jeen/perl5/perlbrew/perls/perl-5.14.2/man&quot;</span>
</span><span class='line'>    <span class="nv">PERLBREW_PATH</span><span class="o">=</span><span class="s2">&quot;/home/jeen/perl5/perlbrew/bin:/home/jeen/perl5/perlbrew/perls/perl-5.14.2/bin&quot;</span>
</span><span class='line'>    <span class="nv">PERLBREW_PERL</span><span class="o">=</span><span class="s2">&quot;perl-5.14.2&quot;</span>
</span><span class='line'>    <span class="nv">PERLBREW_ROOT</span><span class="o">=</span><span class="s2">&quot;/home/jeen/perl5/perlbrew&quot;</span>
</span><span class='line'>    <span class="nv">PERLBREW_VERSION</span><span class="o">=</span><span class="s2">&quot;0.39&quot;</span>
</span><span class='line'>  @INC:
</span><span class='line'>    /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/site_perl/5.14.2/amd64-freebsd
</span><span class='line'>    /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/site_perl/5.14.2
</span><span class='line'>    /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/amd64-freebsd
</span><span class='line'>    /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2
</span><span class='line'>    .
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>df -Th .
</span><span class='line'>Filesystem   Type    Size    Used   Avail Capacity  Mounted on
</span><span class='line'>/dev/ar0s1f  ufs      43G    5.1G     35G    13%    /usr
</span></code></pre></td></tr></table></div></figure>


<p>  일단 사건해결에 도움이 될 만한 정보들은 모조리 뽑아봤습니다.
  천천히 살펴보며 구원을 요청해야 되겠네요.</p>

<h3>Conclusion</h3>

<p>  <a href="http://webchat.freenode.net?channels=perl-kr">#perl-kr</a> 에서 위에 정리한 내용들로 <a href="http://twitter.com/aer0">@aer0</a> 님께 질문을 날렸습니다. @aer0 님께서 제안하신 방법으로</p>

<ul>
<li><code>Bundle::CPAN</code> 을 설치</li>
<li><p><code>~/.cpan</code> 디렉토리를 삭제 후 다시 <code>cpan</code> 실행</p>

<p>이었습니다.</p>

<p><code>Bundle::CPAN</code> 을 설치해도 사태가 해결되지 않아서, 결국은 <code>~/.cpan</code> 디렉토리를 삭제한 후 다시 <code>cpan</code> 을 실행했습니다.</p></li>
<li><p>~/.cpan/sources/modules/02packages.details.txt.gz</p></li>
<li><p>~/.cpan/sources/modules/03modlist.data.gz</p>

<p>같은 CPAN 미러에서 가져오는 인덱스 파일이 이상해서 꼬인 것 같다라는 @aer0 님의 총평이었습니다.</p>

<p>역시 이런 사건이 발생할 때는 <code>#perl-kr</code> 에 들러야 됩니다. :-)</p></li>
</ul>


<blockquote class="twitter-tweet" data-in-reply-to="154824190581678081" lang="ko"><p>@<a href="https://twitter.com/JEEN_LEE">JEEN_LEE</a> 자문자답 <a href="http://t.co/hSGdHz9i" title="http://jeen.github.com/blog/2012/01/05/freebsd-8-dot-2-stable-cpan-error/">jeen.github.com/blog/2012/01/0…</a></p>&mdash; JEEN (@JEEN_LEE) <a href="https://twitter.com/JEEN_LEE/status/154930926294536192" data-datetime="2012-01-05T14:23:05+00:00">1월 5, 2012</a></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test::More - use 'subtest' instead of {} block]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/05/test-more-use-subtest-instead-of-block/"/>
    <updated>2012-01-05T20:33:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/05/test-more-use-subtest-instead-of-block</id>
    <content type="html"><![CDATA[<p>  여태껏 테스트코드를 써나가면서 그냥 {} 블록안에 일정한 흐름의 테스트 코드를 적곤 했었습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">Test::</span><span class="n">More</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">HTTP::Request::</span><span class="n">Common</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Catalyst::</span><span class="n">Test</span> <span class="s">&#39;MyApp::Web&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Access /</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="n">request</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ok</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">is_success</span><span class="p">,</span> <span class="s">&quot;Request should be succeed&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ok</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">header</span><span class="p">(</span><span class="s">&#39;.......&#39;</span><span class="p">),</span> <span class="s">&#39;Header xxxxx exist&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">like</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">content</span><span class="p">,</span> <span class="sx">qr|some sentences|</span><span class="p">,</span> <span class="s">&quot;Found some sentences&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Login</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$req</span> <span class="o">=</span> <span class="n">POST</span><span class="p">(</span><span class="s">&#39;/login&#39;</span><span class="p">,</span> <span class="p">[</span> <span class="s">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;blahblah&#39;</span><span class="p">,</span> <span class="s">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;blahblah&#39;</span> <span class="p">]);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="n">request</span><span class="p">(</span><span class="nv">$req</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ok</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">is_success</span><span class="p">,</span> <span class="s">&quot;Request should be suceed&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="o">....</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># some action</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="o">...</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>  일단 뭐 {} 블록으로 각 action 에 대한 접근결과를 테스트하고, <code>#</code> 로 주석표시를 하면서 하나둘 하나둘 각 블록에 <code>$req</code>, <code>$res</code> 를 추가했었습니다. 일단 뭐 {} 블록으로 묶으면서 <code>$req</code>, <code>$res</code> 따위의 변수의 재정의 등에 관한 경고같은 것이 안나와서 좋고, 제대로 분류가 되는 느낌이기도 했습니다.</p>

<h3>그냥 <code>subtest</code> 를 사용하면 어떨까?</h3>

<p>  그러는 도중에 <a href="http://search.cpan.org/perldoc?Test::More">Test::More 매뉴얼</a>을 읽어보다가 <code>subtest</code> 를 사용할 수 있다는 것을 알게 되었습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="nn">HTTP::Request::</span><span class="n">Common</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Catalyst::</span><span class="n">Test</span> <span class="s">&#39;MyApp::Web&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Test::</span><span class="n">More</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">subtest</span> <span class="s">&#39;access to /&#39;</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="n">request</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ok</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">is_success</span><span class="p">,</span> <span class="s">&quot;Request should be succeed&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ok</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">header</span><span class="p">(</span><span class="s">&#39;.......&#39;</span><span class="p">),</span> <span class="s">&#39;Header xxxxx exist&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="n">like</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">content</span><span class="p">,</span> <span class="sx">qr|some sentences|</span><span class="p">,</span> <span class="s">&quot;Found some sentences&quot;</span><span class="p">)</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">subtest</span> <span class="s">&#39;Login&#39;</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$req</span> <span class="o">=</span> <span class="n">POST</span><span class="p">(</span><span class="s">&#39;/login&#39;</span><span class="p">,</span> <span class="p">[</span> <span class="s">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;blahblah&#39;</span><span class="p">,</span> <span class="s">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s">&#39;blahblah&#39;</span> <span class="p">]);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="n">request</span><span class="p">(</span><span class="nv">$req</span><span class="p">);</span>
</span><span class='line'>    <span class="n">ok</span><span class="p">(</span><span class="nv">$res</span><span class="o">-&gt;</span><span class="n">is_success</span><span class="p">,</span> <span class="s">&quot;Request should be suceed&quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="o">....</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>  <code>subtest</code> 를 사용하면서 코드는 위처럼 바뀌었습니다. <code>#</code> 로 주석처리를 할 필요도 없고, 해당 <code>subtest</code> 마다 명확하게 무엇을 하는 지 확실하게 의미있는 <code>subtest</code> 의 이름으로 정해줄 수 있었습니다.</p>

<p>  <code>subtest</code> 로 테스트를 썼을 경우는 TAP 결과는 다음과 같습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>prove t/myapp.t
</span><span class='line'>ok 1 - access to /
</span><span class='line'>    ok 1 - Request should be succeed
</span><span class='line'>    ok 2 - Header xxxxx exist
</span><span class='line'>    ok 3 - Found some sentences
</span><span class='line'>    1..3
</span><span class='line'>ok 2 - Login
</span><span class='line'>    ok 1 - Request should be suceed
</span><span class='line'>    ...
</span><span class='line'>    1..3
</span><span class='line'>....
</span><span class='line'>1..3
</span><span class='line'>ok
</span><span class='line'>All tests successful.
</span><span class='line'><span class="nv">Files</span><span class="o">=</span>1, <span class="nv">Tests</span><span class="o">=</span>3, 10 wallclock secs <span class="o">(</span> 0.07 usr  0.01 sys +  6.16 cusr  0.61 <span class="nv">csys</span> <span class="o">=</span>  6.85 CPU<span class="o">)</span>
</span><span class='line'>Result: PASS
</span></code></pre></td></tr></table></div></figure>


<p>  전체 테스트 횟수는 <code>subtest</code> 안의 테스트 항목이 아니라, <code>subtest</code> 의 갯수가 되는 것입니다.</p>

<p>  그리고 <code>subtest</code> 를 사용하지 않고 {} 블록을 이용해서 flat 하게 정의했을 때는 아래와 같습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'>ok 1 - Request should be succeed
</span><span class='line'>ok 2 - Header xxxxx exist
</span><span class='line'>ok 3 - Found some sentences
</span><span class='line'>ok 4 - Request should be suceed
</span><span class='line'> ...
</span></code></pre></td></tr></table></div></figure>


<p>  테스트 항목 1,4 번의 메시지가 같기 때문에 매번 달리 지정해줘야 되는 수고가 발생하죠. 그리고 각각의 테스트 항목 하나하나가 테스트 갯수가 되는 것입니다.</p>

<p>  사실은 위의 Jenkins 상의 <code>Test Result Trend</code> 의 그래프가 어느 순간 갑자기 뚝 떨어지길래, 어라 이상하다 싶어서 살펴본 결과, <code>subtest</code> 기준으로 카운트되어있는 것을 확인했습니다.</p>

<p><img src="https://lh5.googleusercontent.com/-TSX-Kd5-fX4/TwWRjvHx2LI/AAAAAAAAA94/pYrEEgHBZic/test-result-trend.png" alt="Jenkins Test Result Trend 의 낙폭" /></p>

<p>  대충 위의 <code>#58</code> 번 빌드가 그 쯤이 되겠네요.</p>

<p>  아무튼 Jenkins 도입이후에 좀 더 테스트코드에 더 신경을 쓰고 있는 요즘입니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl - Mail Send II]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/04/perl-mail-send-ii/"/>
    <updated>2012-01-04T18:26:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/04/perl-mail-send-ii</id>
    <content type="html"><![CDATA[<ul>
<li><p><a href="http://jeen.github.com/blog/2011/12/29/perl-email-send/">Perl - Mail Send</a></p>

<p>이전에 Perl 에서 Mail Send 관련해서 한번 깨작거린 적이 있습니다.</p>

<p>오늘은 이에 대해서 추가적인 수정이 필요한 부분이 있어서, <code>MyApp::Mail</code> 을 조금 더 건드려 봤습니다.</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Moose</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Moose::Util::</span><span class="n">TypeConstraints</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">namespace::</span><span class="n">autoclean</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Email::</span><span class="n">MIME</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Email::Sender::</span><span class="n">Simple</span> <span class="s">&#39;sendmail&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Email::Sender::Transport::</span><span class="n">SMTP</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Encode</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">MIME::</span><span class="n">Types</span> <span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">subtype</span> <span class="s">&#39;MailAddresses&#39;</span> <span class="o">=&gt;</span> <span class="n">as</span> <span class="s">&#39;Str&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">coerce</span> <span class="s">&#39;MailAddresses&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">from</span> <span class="s">&#39;ArrayRef&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">via</span> <span class="p">{</span> <span class="nb">join</span><span class="p">(</span><span class="s">&quot;, &quot;</span><span class="p">,</span> <span class="p">(</span><span class="nb">map</span> <span class="p">{</span> <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span> <span class="p">)</span> <span class="p">}</span> <span class="nv">@</span><span class="p">{</span> <span class="nv">$_</span> <span class="p">}))</span> <span class="p">};</span>
</span><span class='line'>     <span class="n">from</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'>         <span class="n">via</span> <span class="p">{</span> <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span> <span class="p">)</span> <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">to</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;MailAddresses&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">required</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="n">coerce</span>    <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">from</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">required</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">subject</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">required</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">body</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>  <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span> <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">transport</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>  <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span> <span class="o">=&gt;</span> <span class="s">&#39;HashRef&#39;</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">attachments</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span> <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span> <span class="o">=&gt;</span> <span class="s">&#39;ArrayRef[Path::Class::File]&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="o">[]</span> <span class="p">},</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">_get_parts</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">@parts</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">push</span> <span class="nv">@parts</span><span class="p">,</span>
</span><span class='line'>        <span class="nn">Email::</span><span class="n">MIME</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>            <span class="n">attributes</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">content_type</span> <span class="o">=&gt;</span> <span class="s">&#39;text/plain&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">charset</span>      <span class="o">=&gt;</span> <span class="s">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="n">body</span> <span class="o">=&gt;</span> <span class="nn">Encode::</span><span class="n">encode_utf8</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">body</span><span class="p">),</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="k">for</span> <span class="k">my</span> <span class="nv">$attachment</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">attachments</span> <span class="p">})</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">confess</span> <span class="s">&quot;File Not Found : $attachment&quot;</span> <span class="k">unless</span> <span class="o">-</span><span class="n">f</span> <span class="nv">$attachment</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="p">(</span><span class="nv">$mime_type</span><span class="p">,</span> <span class="nv">$encoding</span><span class="p">)</span> <span class="o">=</span> <span class="nn">MIME::Types::</span><span class="n">by_suffix</span><span class="p">(</span><span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$mime_type</span> <span class="o">||=</span> <span class="s">&#39;multipart/mixed&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$file_body</span> <span class="o">=</span> <span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">slurp</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">push</span> <span class="nv">@parts</span><span class="p">,</span> <span class="nn">Email::</span><span class="n">MIME</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>            <span class="n">attributes</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">content_type</span> <span class="o">=&gt;</span> <span class="nv">$mime_type</span><span class="p">,</span>
</span><span class='line'>                <span class="n">name</span>         <span class="o">=&gt;</span> <span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">,</span>
</span><span class='line'>                <span class="n">filename</span>     <span class="o">=&gt;</span> <span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">,</span>
</span><span class='line'>                <span class="n">encoding</span>     <span class="o">=&gt;</span> <span class="s">&#39;base64&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">disposition</span>  <span class="o">=&gt;</span> <span class="s">&#39;attachment&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="n">body</span> <span class="o">=&gt;</span> <span class="nv">$file_body</span><span class="p">,</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="o">\</span><span class="nv">@parts</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">send</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$opt</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">transport</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$opt</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">transport</span><span class="p">}</span> <span class="o">=</span> <span class="nn">Email::Sender::Transport::</span><span class="n">SMTP</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">transport</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$email</span> <span class="o">=</span> <span class="nn">Email::</span><span class="n">MIME</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>        <span class="n">header</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>            <span class="n">From</span>    <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">from</span><span class="p">,</span>
</span><span class='line'>            <span class="n">To</span>      <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">to</span><span class="p">,</span>
</span><span class='line'>            <span class="n">Subject</span> <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">subject</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="n">parts</span> <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_get_parts</span><span class="p">,</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>    <span class="n">sendmail</span><span class="p">(</span><span class="nv">$email</span><span class="p">,</span> <span class="nv">$opt</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">meta</span><span class="o">-&gt;</span><span class="n">make_immutable</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  일단 수정을 필요로 한 부분은, 똑같은 메일 내용을 둘 이상에게  보내야 할 경우입니다. 일반적으로 업체에서 보내는 메일의 헤더를 보면 <code>To</code> 에 본인만 들어가 있을 겁니다. 이게 일반적이죠.</p>

<p>  하지만 이번에는 사내 시스템 관련 리포트를 보내는 것이고, 특정 다수에게 보내며, 메일링이 없다는 전제하에서 움직였습니다.</p>

<p>변경된 부분은,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='diff'><span class='line'>package MyApp::Mail;
</span><span class='line'>use Moose;
</span><span class='line'><span class="gi">+use Moose::Util::TypeConstraints;</span>
</span><span class='line'>use namespace::autoclean;
</span><span class='line'><span class="gu">@@ -9, 13 +10, 22 @@ use Email::Sender::Transport::SMTP;</span>
</span><span class='line'>use Encode;
</span><span class='line'>use MIME::Types ();
</span><span class='line'>
</span><span class='line'><span class="gi">+subtype &#39;MailAddresses&#39; =&gt; as &#39;Str&#39;;</span>
</span><span class='line'>
</span><span class='line'><span class="gi">+coerce &#39;MailAddresses&#39;,</span>
</span><span class='line'><span class="gi">+   from &#39;ArrayRef&#39;,</span>
</span><span class='line'><span class="gi">+        via { join(&quot;, &quot;, (map { Encode::encode( &quot;MIME-Header&quot;, $_ ) } @{ $_ })) };</span>
</span><span class='line'><span class="gi">+     from &#39;Str&#39;,</span>
</span><span class='line'><span class="gi">+         via { Encode::encode( &quot;MIME-Header&quot;, $_ ) };</span>
</span><span class='line'><span class="gi">+</span>
</span><span class='line'>has to =&gt; (
</span><span class='line'>    is      =&gt; &#39;ro&#39;,
</span><span class='line'><span class="gd">-    isa     =&gt; &#39;Str&#39;,</span>
</span><span class='line'><span class="gi">+    isa     =&gt; &#39;MailAddresses&#39;,</span>
</span><span class='line'>    default =&gt; sub {
</span><span class='line'>        Encode::encode( &quot;MIME-Header&quot;, $_[0] );
</span><span class='line'>    },
</span><span class='line'>    required =&gt; 1,
</span><span class='line'><span class="gi">+    coerce    =&gt; 1,</span>
</span><span class='line'>);
</span></code></pre></td></tr></table></div></figure>


<p>  입니다. subtype 을 지정하기 위해서 <code>Moose::Util::TypeConstraints</code> 를 use 할 필요가 있구요. <code>To</code> 헤더의 형식을 <code>MailAddresses</code> 라는 subtype 으로 받도록 합니다. 그냥 문자열 값이 들어오든 Array Reference 가 들어오든 그에 맞춰서 변환해주도록 했구요.</p>

<p>  이전 글에서 간략하게 Mail 테스트 방법에 대해서 소개했는데, 현재 위처럼 수정한 다음에 아래와 같이 테스트코드를 작성해서 문제없이 작동하는 것을 확인할 수 있었습니다.</p>

<figure class='code'><figcaption><span>send-mail.t</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Test::</span><span class="n">Most</span><span class="p">;</span>
</span><span class='line'><span class="n">use_ok</span> <span class="s">&#39;MyApp::Mail&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Path::Class::</span><span class="n">File</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">BEGIN</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$ENV</span><span class="p">{</span><span class="n">EMAIL_SENDER_TRANSPORT</span><span class="p">}</span> <span class="o">=</span> <span class="s">&#39;Test&#39;</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">%data_set</span> <span class="o">=</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">to</span>      <span class="o">=&gt;</span> <span class="s">&#39;your@email.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">from</span>    <span class="o">=&gt;</span> <span class="s">&#39;my@email.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">subject</span> <span class="o">=&gt;</span> <span class="s">&#39;MailSender Test Subject&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">body</span>    <span class="o">=&gt;</span> <span class="s">&#39;MailSender Test Body&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Send a mail w/ attachments</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$mailer</span> <span class="o">=</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
</span><span class='line'>    <span class="nv">%data_set</span><span class="p">,</span>
</span><span class='line'>    <span class="n">attachments</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>        <span class="nn">Path::Class::</span><span class="n">File</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="s">&#39;somefile.zip&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="nn">Path::Class::</span><span class="n">File</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="s">&#39;somefile.ee&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$mailer</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Send a mail without attachments</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$mailer2</span> <span class="o">=</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="nv">%data_set</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$mailer2</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Send a mail with Multiple Recipients</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$mailer3</span> <span class="o">=</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
</span><span class='line'>    <span class="nv">%data_set</span><span class="p">,</span>
</span><span class='line'>    <span class="n">to</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s">&#39;your2@email.com&#39;</span><span class="p">,</span> <span class="s">&#39;anotheremail@gmail.com&#39;</span> <span class="p">],</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$mailer3</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Just string</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$mailer4</span> <span class="o">=</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
</span><span class='line'>  <span class="nv">%data_set</span><span class="p">,</span>
</span><span class='line'>  <span class="n">to</span> <span class="o">=&gt;</span> <span class="s">&#39;mail-1@mail.com, mail-2@mail.com, mail-3@mail.com&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$mailer4</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$deliveries</span> <span class="o">=</span> <span class="nn">Email::Sender::</span><span class="n">Simple</span><span class="o">-&gt;</span><span class="n">default_transport</span><span class="o">-&gt;</span><span class="n">deliveries</span><span class="p">;</span>
</span><span class='line'><span class="k">for</span> <span class="k">my</span> <span class="nv">$deliv</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span> <span class="nv">$deliveries</span> <span class="p">})</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">my</span> <span class="nv">$sent_addresses</span> <span class="o">=</span> <span class="nb">join</span> <span class="s">&quot;, &quot;</span><span class="p">,</span> <span class="nv">@</span><span class="p">{</span> <span class="nv">$deliv</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">successes</span><span class="p">}</span> <span class="p">};</span>
</span><span class='line'>  <span class="n">ok</span> <span class="nv">$deliv</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">successes</span><span class="p">},</span> <span class="s">&#39;Mail sent to &#39;</span><span class="o">.</span> <span class="nv">$sent_addresses</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="n">done_testing</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>  물론 <code>$deliveries</code> 변수를 덤프해보면 각각의 메일헤더들이 존재하고 좀 더 항목당 세밀하게 테스트를  수행할 수 있겠지만, 여기서는 단순하게 이정도로 그치도록 합니다.</p>

<p>  사실은 뭐 <code>To</code> 안에 여러개의 메일이 들어간다는 전제로 ArrayRef 를 넣었지만, 사실 Str 을 받기에 <code>To</code> 에 대해서는 그냥 문자열로 <code>mail-1@mail.com, mail-2@mail.com, mail-3@mail.com</code> 으로 해도 가능합니다. 하지만 그냥 제 고집상 복수의 데이터셋이 들어갈 때는 왠지 ArrayRef 로 넣고 싶어졌을 뿐입니다. 존중받고 싶은 취향같은 것이죠.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[번역] PM's Task Management @ EA]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/03/ea-pms-task-management/"/>
    <updated>2012-01-03T20:53:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/03/ea-pms-task-management</id>
    <content type="html"><![CDATA[<ul>
<li><p>프로젝트의 두목은 두명으로 나뉜다. 한명은 Creative Director, 다른 한명은 Project Manager. PM 은 예산/외주관리/리소스 관리의 모든 권한을 가지고, CD 가 그 이외의 권한을 가진다.</p></li>
<li><p>권력의 관계는 CD>PM. CD 가 &#8220;좀 늦어도 되니까 이것을 한다&#8221; 라고 정하면 PM 은 그에 따라, 프로젝트를 짜맞춰야 한다. 단, CD 가 최종책임은 전부 덮어쓰는 것이 룰.</p></li>
<li><p>PM 이 실제로 스케쥴을 진행하는 방법은 리소스 관리를 하면서, 2두 단위로 마일스톤을 내놓는다. 마일스톤에는 반드시 목적이 있고, 상황에 맞춰서 최종 스케쥴은 항상 바뀐다.</p></li>
<li><p>마일스톤 6개에 하나 정도는 빅 마일스톤, 프로젝트의 진행상황을 외부(상층부)에 대해 나타내는 [알파] 를 내놓는다.</p></li>
<li><p>최종 스케쥴은 필요한 리소스를 전부 나열해서, 팀원 스스로 골라서 맡게 된다. 다음은 PM 이 팀의 실적을 보고 속도를 CD 와 상층부에 알리고, 어디가 병목이 되는 지 등을 관리한다.</p></li>
<li><p>프로젝트 팀원은 항상 마일스톤에서 당면한 목표를 알고 있어서 정말로 프로세스를 가지고 생각할 수 있으며, PM 이 항상 스케쥴을 쌓고, 속도를 계산해서 무엇이 늦어지고 있는 지 알려줄 수 있기 때문에 편하다</p></li>
<li><p>내용과 진행 관리를 완전히 나눠서 최종적으로 내용관리로 정리한다. 처음은 내용을 전부 리스트로 만든다. 어떻게든 모든 요소라고 생각되는 것을 가시화 해서 리스트로 만들고 &#8220;어느 정도의 작업이 있는가&#8221;를 계산해낸다.</p></li>
<li><p>그리고 그 내용중에 &#8220;절대로 fun factor 에 빠질 수 없는 것&#8221; 등을 CD 가 가르쳐 준다. 그 다음은 마일스톤에서 쌓아가면서 스케쥴을 보고, 일정 실적을 쌓을 즘에 실제로 가능한 것인지 전부 리스트로 만든다.</p></li>
<li><p>그래서 PM 에게 질문하면 &#8220;이 추가예산이 있다면 아웃소싱이 있다면 여기에 이것을 투입하면 이렇게 단축할 수 있다&#8221; 라는 매우 구체적인 스케쥴을 항상 가질 수 있다.</p></li>
<li><p>덧붙여 CD>PM 이라는 권력관계가 되어 있는 것은 EA 의 게임 크리에이티브와 재미를 담보로 하는 것은 결국은 게임 디자이너가 아니면 안된다라는 생각을 가지고 있기 때문이다.</p></li>
</ul>


<h3>원문</h3>

<ul>
<li><a href="http://togetter.com/li/198059">EA流のPMのタスク管理の仕方 - Togetter</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[번역] About Tim Sort]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/03/about-tim-sort/"/>
    <updated>2012-01-03T19:44:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/03/about-tim-sort</id>
    <content type="html"><![CDATA[<p>  최근, <code>TimSort</code> 라는 정렬 알고리즘 이 화제가 되었습니다. <code>TimSort</code> 는 빠르고 안정적인 정렬 알고리즘으로, <code>Python(&gt;=2.3)</code> 과 <code>Java SE 7</code>, 그리고 <code>Android</code> 에서 표준 정렬 알고리즘으로 채용되었다고 합니다.</p>

<p>   C++ 의 <code>std::sort()</code> 보다도 빠르다는 벤치마크 결과가 화제가 되어(나중에 벤치마크의 오류라고 판명났지만), 그때 <code>TimSort</code> 의 존재를 알았습니다. 실제로 랜덤 데이터에 대해서는 <code>Quick Sort(IntroSort)</code> 보다 빠르지는 않지만, 정렬이라는 단순한 일을 하는 알고리즘 이 지금도 더욱 개량해오며 사람들의 관심을 끌고 있다는 것은 흥미깊은 일입니다.</p>

<h3>개요</h3>

<p>   <code>TimSor</code>t 는 한마디로 하면, <strong>&#8220;STL 의 <em>IntroSort</em> 의 Merge Sort 버젼&#8221;</strong> 입니다. 조금 더 정확하게 이야기하면 거기에 몇가지의 Heuristic 이라고 할 수 있습니다. 몇가지 테크닉의 집합체이기에, 이런 것들을 어디까지 <code>TimSort</code> 라고 불러야 할지는 모르겠습니다.</p>

<h3>IntroSort</h3>

<p>  <code>IntroSort</code> 란, <code>Quick Sort</code> 의 개량버젼입니다. <code>Quick Sort</code> 는 상당히 빠른 알고리즘이지만, 몇가지 약점이 있습니다.</p>

<p>  약점 중 하나는 최악계산량입니다. 피벗(Pivot)의 선택이 잘 이뤄지지 않으면, 요소 수의 2제곱에 비례한 시간이 걸리게 됩니다. 몇가지 요소를 샘플링한 뒤에 중앙값을 Pivot하면, 평균적인 데이터에 대해서는 꽤 양호한 성능을 바타내지만, 그것은 최악계산량을 보증하는 것은 아닙니다. 예를 들어, 특정 구현에 대해서 2 제곱의 시간이 걸리는 데이터를 만드는 것은 쉽고, 그것을 노려서 공격하는 것도 가능합니다.</p>

<p>  <code>IntroSort</code> 에서는 이에 대처하기 위해, 재귀탐색이 요소수의 대수를 넘으면 <code>HeapSort</code> 로 바꾸게 됩니다. 이에 의해 최악계산량을 O(n log n)에 대입하고, 평균적인 데이터에서는 <code>QuickSort</code> 에 필적하는 성능을 달성합니다.</p>

<p>   다른 하나의 약점은 요소 수가 적은 경우입니다. 적은 요소 수(&lt;32 정도) 에서는 계산량의 순서가 커도 단순히 오버헤드가 적은 <code>Insert Sort</code> 나 <code>Select Sort</code> 같은 알고리즘이 더 빠릅니다. 그리고 분할이 진행된 요소수가 줄어들면, <code>Insert Sort</code> 로 바뀝니다.</p>

<h3>TimSort</h3>

<p>   <code>Merge Sort</code> 는 최악계산량 O(n log n) 이 안정적인 정렬 알고리즘으로, <code>Quick Sort</code> 같은 최악계산량의 문제는 발생하지 않습니다. 그러나, 요소수가 적은 경우는 오버헤드에 의해 <code>Quick Sort</code> 와 마찬가지로 느려집니다. <code>TimSort</code>는 일반적인 <code>Merge Sort</code> 와는 달리, 미리 어느 정도의 크기의 정렬이 끝난 열(run 이라고 부릅니다) 로 분할하고 병합합니다.</p>

<h3>run 크기의 결정</h3>

<p>  run 크기는 <code>Insert Sort</code> 가 가장 빠른 범위(&lt;32) 가 되도록 크게 합니다.또, run 의 갯수가 2의 거듭제곱일 때, 뒷단의 병합이 빨리 끝나기 때문에 [16, 32] 의 범위로, run 의 갯수가 2의 거듭제곱이 되는 것을 선택합니다.</p>

<h3>run 으로의 분할</h3>

<p>  우선 처음으로, 입력열의 작은 정렬이 끝난 열로 분해합니다. 입력열을 앞에서 순서대로 놓고, 단순증가하고 있는 최대의 접두사를 요구합니다. 그것이 어느 정도 커지면 그것을 하나의 run 이라고 합니다. 증가열의 크기가 너무 작은 경우는, <code>Insert Sort</code> 를 사용해 확장합니다. 이 때에 사용하는 <code>Insert Sort</code> 는 전방의 요소가 정렬이 끝났기 때문에, 도중에 수행할 수 있습니다.</p>

<p>  처음의 두 요소가 내림차순이 되었을 경우, 증가열에서는 되도록 감소열을 위해 반전합니다. 이에 의해 <code>Insert Sort</code> 의 횟수를 줄일 수 있습니다. 여기에서 주의할 것은, 안전성을 위해서 감소열은 strict(&lt;) 이어야 합니다.</p>

<p>  입력열의 정렬이 끝난 후, 이 상태로 한번 데이터를 훑어 보는 것만으로 정렬이 끝납니다. 이 때문에 속도가 빠른 것입니다.</p>

<h3>2분할 Insert Sort</h3>

<p>  <code>TimSort</code> 에서는 단순한 <code>Insert Sort</code> 가 아닌, <code>2분할 Insert Sorrt</code> 가 사용됩니다. 이것은 요소의 삽입위치의 결정을 위해서, 정렬이 끝난 부분을 2분할 탐색하는 것입니다. 안전성을 가지도록 삽입위치를 정할 필요가 있다는 것에 주의해야 합니다.</p>

<h3>Merge</h3>

<p>  어느 정도의 사이즈의 run 이 만들어졌다면, 이것을 병합(Merge)합니다. 병합은 평상시대로 2개씩 병합합니다. 이것을 효율있게 수행하기 위해서, 스택을 사용해 run 을 관리합니다. 앞의 상황에서 작성된 run 은 우선 스택에 올려지고, 다음과 같은 불변상황을 만족하도록 병합됩니다.</p>

<pre><code>* length[top] + length[top -1] &lt; length[top -2]
* length[top]  &lt; length[top -1]
</code></pre>

<p>  이것을 만족하는 스택의 깊이는 가장 큰 것이라도 요소 수의 대수가 됩니다. 또, 작은 것 끼리 병합되기에, 계산량 O(n log n)을 보증할 수 있습니다 (<code>TimSort</code> 의 경우는 거의 대부분 같은 크기의 run 이 병합되기에 실용적으로도 충분히 빠르다고 말할 수 있습니다).</p>

<h3>2개의 run 의 병합</h3>

<p>  <code>TimSort</code> 에서는 2개의 run 의 병합에도 많이 고려되어 있습니다.</p>

<h4>연속영역</h4>

<p>  <code>TimSort</code> 에서는 반드시 마주 보고 있는 메모리 영역을 병합합니다. 이것은 앞의 스택의 불변조건에 의해 run의 병합을 수행하면 자연스레 만족됩니다. 옆에 있는 메모리의 영역을 병합하면</p>

<pre><code>* 앞 줄 중 뒷 줄의 선두보다 적은 것
* 뒷 줄의 뒤의 요소 중, 앞 줄의 맨 뒤의 요소보다 큰 것
</code></pre>

<p>  의 복사를 생략할 수 있습니다. 연속한 영역의 부분열만 병합하면 되는 것입니다.</p>

<h4>범위없는 2분할 탐색</h4>

<p>  생략하는 요소를 계산하기 위해서도 2분할 탐색을 이용합니다. 단, 일반적인 2분할 탐색과는 달리, 맨 처음 범위를 고정하지 않고, 다음의 두 단계로 탐색을 수행합니다.</p>

<pre><code>* 1, 2, 4, 8, ... 처럼 2의 거듭제곱 순서의 요소를, 요소가 커질때까지 본다
* 원하는 요소가 어느 범위에 있는 지 요구하기 때문에 (예를 들어, 8번째의 요소가 큰 것이라면, [4,8] 에 원하는 요소가 있습니다) 다시 그 범위로 2분할 탐색
</code></pre>

<p>  병합에 있어서는, 원하는 요소는 꽤 앞에 있을 것이기에, 일반적인 2분할 탐색보다 비교횟수는 적을 것입니다( 평균적인 데이터에 대해서는 선형검색이 빠르다고 생각합니다)</p>

<h4>Galloping Mode</h4>

<p>  남은 부분의 병합은 평상시대로, 맨 앞의 요소를 비교해서 병합해나가지만, 같은 열에서 연속해서 많이 채용되기 시작하면 (>=7), <code>갤로핑 모드(Galloping Mode)</code>라고 불리는 모드로 들어갑니다.</p>

<p>  <code>갤로핑 모드</code>란, 한쪽의 맨 앞의 요소보다도 작은 요소가 다른 쪽의 맨앞에 몇개 있는지를 위의 범위없는 2분할 탐색으로 구하는 것입니다. 같은 줄에서 어느정도 이상의 연속한 경우, 더 많이 연속한다고 예상할 수 있기에, 이것이 제대로 작동할 것입니다.</p>

<h3>Conclusion</h3>

<p>  이상이 <code>TimSort</code> 의 알고리즘입니다. 실질적으로는 <code>Merge Sort</code> 라고 할 수 있습니다. 랜덤한 데이터에 대해서는 <code>IntroSort</code> 나 C++ 의 <code>std::stable_sort()</code> 와 비교해서 속도에 우위성이 있지는 않지만(<code>std::stable_sort()</code> 도 Merge Sort + 작은 요소로 <code>Insert Sort</code>), 정렬이 끝난 데이터, 또는 거의 정렬이 끝난 데이터에 대해서는 맨 처음의 run 작성 및 <code>갤로핑 모드</code>에서 큰 폭의 생략이 예상되기 때문에, 실제 데이터에 그런 경향이 있다면 좋은 성능을 얻을 수 있습니다. 또, <code>Quick Sort</code> 처럼 최악계산량이 문제가 되는 일이 없기 때문에, 이것을 표준으로 채용하는 것은 보안상의 관점에서도 충분히 메리트가 있다고 할 수 있습니다.</p>

<h3>참고자료</h3>

<ul>
<li><a href="http://research.preferred.jp/2011/10/tim-sort/">高速な安定ソートアルゴリズム &#8220;TimSort&#8221;の解説</a></li>
<li><a href="http://en.wikipedia.org/wiki/Timsort">Wikipedia TimSort</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl and Continuous Integration with Jenkins - I]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/03/perl-and-continuous-integration-with-jenkins-1/"/>
    <updated>2012-01-03T11:45:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/03/perl-and-continuous-integration-with-jenkins-1</id>
    <content type="html"><![CDATA[<h3>Jenkins 를 사용하기 까지</h3>

<p>  사실 지난주에 NHN 에서 주최하는 공개개발자 교육에  갔다왔었습니다. 평소 Jenkins 에 대해서 약간 환상 같은 게 있다고 할까, 필요성이 있다고 할까요. 좀 더 프로젝트의 품질이 나아지고 있다는 환상, 그런 걸 보면서 나름 보람을 느끼고 싶다라는 생각도 있었습니다.</p>

<p>  아무튼 Jenkins 교육은 Java 위주의 프로젝트에 적용하는 얘기였지만, 다른 언어에서도 충분히 지원된다라는 얘기를 익히들어왔기에 대강 실습을 따라하면서 감을 익히고 회사에 와서 본격적으로 Jenkins 를 만지기 시작했습니다.</p>

<h3>Perl &amp; Jenkins</h3>

<p>  Jenkins 교육에서는 Maven 을 위주로 여러가지 옵션(?) 을 추가하는 것으로 간단하게 각종 Report 를 뽑아내기 위한 xml 들을 생성할 수 있었습니다. 아쉽게도 Perl 로는 Maven 만큼 쉽게 그렇게 만들기는 어려웠지요.</p>

<p>  일단 Perl 에는 기본적으로 TAP 형식을 따르고 있기 때문에 Java 류의 JUnit 으로 결과를 뽑아낼 필요가 있었습니다. 그래서 TAP 를 JUnit 으로 쉽게 바꿔줄 수 있는 방법이 필요했죠.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>prove --formatter --timer TAP::Formatter::JUnit t
</span></code></pre></td></tr></table></div></figure>


<p>  위와 같은 형식으로 <code>t</code> 디렉토리 아래의 테스트파일들을 테스트하며 결과는 <code>TAP::Formatter::JUnit</code> 에 의해서 xml 파일로 나오게 됩니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;testsuites&gt;</span>
</span><span class='line'>  <span class="nt">&lt;testsuite</span> <span class="na">failures=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>             <span class="na">errors=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>             <span class="na">time=</span><span class="s">&quot;25.6525909900665&quot;</span>
</span><span class='line'>             <span class="na">tests=</span><span class="s">&quot;1&quot;</span>
</span><span class='line'>             <span class="na">name=</span><span class="s">&quot;Catalyst_controller_Admin-Activity_t&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;testcase</span> <span class="na">time=</span><span class="s">&quot;0&quot;</span>
</span><span class='line'>              <span class="na">name=</span><span class="s">&quot;1 - Request should succeed&quot;</span><span class="nt">&gt;&lt;/testcase&gt;</span>
</span><span class='line'>    <span class="nt">&lt;system-out&gt;</span><span class="cp">&lt;![CDATA[ok 1 - Request should succeed</span>
</span><span class='line'><span class="cp">1..1</span>
</span><span class='line'><span class="cp">]]&gt;</span><span class="nt">&lt;/system-out&gt;</span>
</span><span class='line'>    <span class="nt">&lt;system-err&gt;&lt;/system-err&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/testsuite&gt;</span>
</span><span class='line'><span class="nt">&lt;/testsuites&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Task::Jenkins</h3>

<p>  사실은 Jenkins 에서 Perl 프로젝트를 올릴 때의 주요한 모듈의 묶음은 <a href="http://search.cpan.org/perldoc?Task::Jenkins">Task::Jenkins</a> 모듈로 제공되고 있습니다. Task::Jenkins 에 있는 모듈들은,</p>

<ul>
<li><a href="http://search.cpan.org/perldoc?TAP::Formatter::JUnit">TAP::Formatter::JUnit</a></li>
<li><a href="http://search.cpan.org/perldoc?App::Prove">App::Prove</a></li>
<li><p><a href="http://search.cpan.org/perldoc?Devel::Cover">Devel::Cover</a></p>

<p>입니다.</p>

<p><code>TAP::Formatter::JUnit</code> 의 경우는 위에서 설명했고, <code>App::Prove</code> 는 위의 테스트코드를 실행하는 커맨드인 <code>prove</code> 를 사용하기 위한 모듈입니다. <code>Devel::Cover</code> 는 Code Coverage 를 확인할 수 있는 모듈이구요.</p>

<p>일단 Jenkins 에서 Perl 프로젝트를 적용하는 준비는 기본적으로 위의 <code>Task::Jenkins</code> 를 설치함으로 어느 정도 끝났다고 볼 수 있습니다.</p></li>
</ul>


<h3>Jenkins 설치</h3>

<p>  회사내의 서버에 Jenkins 를 설치했습니다. Ubuntu 10.10 Server 버젼이며, Jenkins 의 설치는 그렇게 어렵지 않습니다.</p>

<p>  쉽게 Google 에서 <em>Jenkins Ubuntu</em> 로 검색해서 나온 것들 중 첫번째를 골라봤습니다.</p>

<ul>
<li><a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+on+Ubuntu">Installing Jenkins on Ubuntu</a></li>
</ul>


<p>  <code>apt</code> source 추가하고 <code>aptitude</code> 로 설치하고, Apache 에서 Proxy 설정해주고, 이에 대한 자세한 이야기는 위의 링크에 자세히 나와 있으니 참고하시길 바랍니다.</p>

<p>  NHN 공개개발자 교육에서는 보안상의 문제로 Tomcat 위에다가 얹어놓기를 권하셨지만, Jenkins 자체의 Standalone Server 로 충분하지 않나 생각됩니다. 뭐 어차피 사내 네트워크 안에서 사용할 것인데&#8230; 라며&#8230; =3</p>

<p>  아무튼 이렇게 띄워서 실제로 사내에서 사용하고 있는 Jenkins Top Page 는 아래와 같습니다.</p>

<p><img src="http://lh6.googleusercontent.com/--lGDWehSz5k/TwKGZAtvsUI/AAAAAAAAA9w/tRFttK10-wg/jenkins-top-page.png" alt="Jenkins Top" /></p>

<p>  한번에 적으려니 좀 길고 해서, 일단 밑밥깔기부터 하고 다음 글부터는 좀 더 자세한 Jenkins 에서 Perl 프로젝트 적용에 대해서 상세한 캡쳐와 함께 설명하고자 합니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl - Email Send]]></title>
    <link href="http://JEEN.github.com/blog/2011/12/29/perl-email-send/"/>
    <updated>2011-12-29T17:45:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2011/12/29/perl-email-send</id>
    <content type="html"><![CDATA[<p>  회사 선배이신 <a href="http://twitter.com/mintegrals">@mintegrals</a> 께서 최근에 사내 버그질라에 올려놓은 내용을 보고 약간 코드를 수정해봤습니다.
  내용인즉슨, 파일 첨부한 메일을 어떻게 보낼 수 있냐라는 것이었지요.
  기존에 써놨던 메일송신을 하는 모듈이 파일첨부를 고려하지 않았던 것이었는데, 그런 상황등을 고려해서 좀 더 수정해봤습니다.</p>

<h3>MyApp::Mail</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Moose</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">namespace::</span><span class="n">autoclean</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Email::</span><span class="n">MIME</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Email::Sender::</span><span class="n">Simple</span> <span class="s">&#39;sendmail&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Email::Sender::Transport::</span><span class="n">SMTP</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Encode</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">MIME::</span><span class="n">Types</span> <span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">to</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">required</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">from</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">required</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">subject</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>      <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span>     <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>        <span class="nn">Encode::</span><span class="n">encode</span><span class="p">(</span> <span class="s">&quot;MIME-Header&quot;</span><span class="p">,</span> <span class="nv">$_</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="n">required</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">body</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>  <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span> <span class="o">=&gt;</span> <span class="s">&#39;Str&#39;</span><span class="p">,</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">transport</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span>  <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span> <span class="o">=&gt;</span> <span class="s">&#39;HashRef&#39;</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">has</span> <span class="n">attachments</span> <span class="o">=&gt;</span> <span class="p">(</span>
</span><span class='line'>    <span class="n">is</span> <span class="o">=&gt;</span> <span class="s">&#39;ro&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">isa</span> <span class="o">=&gt;</span> <span class="s">&#39;ArrayRef[Path::Class::File]&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="n">default</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="o">[]</span> <span class="p">},</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">_get_parts</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">@parts</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">push</span> <span class="nv">@parts</span><span class="p">,</span>
</span><span class='line'>        <span class="nn">Email::</span><span class="n">MIME</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>            <span class="n">attributes</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">content_type</span> <span class="o">=&gt;</span> <span class="s">&#39;text/plain&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">charset</span>      <span class="o">=&gt;</span> <span class="s">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="n">body</span> <span class="o">=&gt;</span> <span class="nn">Encode::</span><span class="n">encode_utf8</span><span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">body</span><span class="p">),</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">for</span> <span class="k">my</span> <span class="nv">$attachment</span> <span class="p">(</span><span class="nv">@</span><span class="p">{</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">attachments</span> <span class="p">})</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">confess</span> <span class="s">&quot;File Not Found : $attachment&quot;</span> <span class="k">unless</span> <span class="o">-</span><span class="n">f</span> <span class="nv">$attachment</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="p">(</span><span class="nv">$mime_type</span><span class="p">,</span> <span class="nv">$encoding</span><span class="p">)</span> <span class="o">=</span> <span class="nn">MIME::Types::</span><span class="n">by_suffix</span><span class="p">(</span><span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$mime_type</span> <span class="o">||=</span> <span class="s">&#39;multipart/mixed&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">my</span> <span class="nv">$file_body</span> <span class="o">=</span> <span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">slurp</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">push</span> <span class="nv">@parts</span><span class="p">,</span> <span class="nn">Email::</span><span class="n">MIME</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>            <span class="n">attributes</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                <span class="n">content_type</span> <span class="o">=&gt;</span> <span class="nv">$mime_type</span><span class="p">,</span>
</span><span class='line'>                <span class="n">name</span>         <span class="o">=&gt;</span> <span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">,</span>
</span><span class='line'>                <span class="n">filename</span>     <span class="o">=&gt;</span> <span class="nv">$attachment</span><span class="o">-&gt;</span><span class="n">basename</span><span class="p">,</span>
</span><span class='line'>                <span class="n">encoding</span>     <span class="o">=&gt;</span> <span class="s">&#39;base64&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="n">disposition</span>  <span class="o">=&gt;</span> <span class="s">&#39;attachment&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="n">body</span> <span class="o">=&gt;</span> <span class="nv">$file_body</span><span class="p">,</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="o">\</span><span class="nv">@parts</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">send</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$opt</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">transport</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$opt</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">transport</span><span class="p">}</span> <span class="o">=</span> <span class="nn">Email::Sender::Transport::</span><span class="n">SMTP</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">transport</span> <span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$email</span> <span class="o">=</span> <span class="nn">Email::</span><span class="n">MIME</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">(</span>
</span><span class='line'>        <span class="n">header</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>            <span class="n">From</span>    <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">from</span><span class="p">,</span>
</span><span class='line'>            <span class="n">To</span>      <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">to</span><span class="p">,</span>
</span><span class='line'>            <span class="n">Subject</span> <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">subject</span>
</span><span class='line'>        <span class="p">],</span>
</span><span class='line'>        <span class="n">parts</span> <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">_get_parts</span><span class="p">,</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>    <span class="n">sendmail</span><span class="p">(</span><span class="nv">$email</span><span class="p">,</span> <span class="nv">$opt</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">meta</span><span class="o">-&gt;</span><span class="n">make_immutable</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  파일첨부를 위한 <code>attachments</code> 접근자를 추가로 지정합니다. 첨부파일은 하나가 아닌 여러개가 가능하기에 <code>ArrayRef</code> 를 기본형식으로 합니다. 각 요소는 반드시 <code>Path::Class::File</code> 로 받도록 했습니다.</p>

<p>  <code>MIME::Types</code> 로 첨부파일의 확장자를 통해서 MIME-TYPE 을 뽑아내도록 하고, 알 수 없다면 <code>multipart/mixed</code> 로 지정했습니다.</p>

<p>  <code>transport</code> 레이어를 별도로 지정할 수 있으며, <code>transport</code> 의 지정이 없을 경우는 당연히 로컬호스트의 <code>smtp</code> 를 이용하도록 합니다.</p>

<h3>Using MyApp::Mail</h3>

<p>  위의 <code>MyApp::Mail</code> 을 이용하기 위해서 아래와 같이 <code>sendmail.pl</code> 이라는 스크립트를 준비했습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1"># sendmail.pl</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Path::Class::</span><span class="n">File</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$to</span>    <span class="o">=</span> <span class="s">&#39;your@email.com&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$from</span>  <span class="o">=</span> <span class="s">&#39;my@email.com&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$subject</span> <span class="o">=</span> <span class="s">&#39;MailSender Test Subject&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$body</span>    <span class="o">=</span> <span class="s">&#39;MailSender Test Body&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$mailer</span> <span class="o">=</span> <span class="nn">MyApp::</span><span class="n">Mail</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span>
</span><span class='line'>    <span class="n">to</span> <span class="o">=&gt;</span> <span class="nv">$to</span><span class="p">,</span>
</span><span class='line'>    <span class="n">from</span> <span class="o">=&gt;</span> <span class="nv">$from</span><span class="p">,</span>
</span><span class='line'>    <span class="n">subject</span> <span class="o">=&gt;</span> <span class="nv">$subject</span><span class="p">,</span>
</span><span class='line'>    <span class="n">body</span>    <span class="o">=&gt;</span> <span class="nv">$body</span><span class="p">,</span>
</span><span class='line'>    <span class="n">attachments</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>      <span class="nn">Path::Class::</span><span class="n">File</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="s">&#39;test.doc&#39;</span><span class="p">),</span>
</span><span class='line'>      <span class="nn">Path::Class::</span><span class="n">File</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="s">&#39;text.pdf&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="n">transport</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">host</span> <span class="o">=&gt;</span> <span class="s">&#39;smtp.gmail.com&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">port</span> <span class="o">=&gt;</span> <span class="mi">465</span><span class="p">,</span>
</span><span class='line'>        <span class="n">sasl_username</span> <span class="o">=&gt;</span> <span class="s">&#39;YOUR_GOOGLE EMAIL&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">sasl_password</span> <span class="o">=&gt;</span> <span class="s">&#39;YOUR_GOOGLE_PASS&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">ssl</span>  <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$mailer</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  위에서 언급한 <code>transport</code> 레이어에 지메일의 <code>smtp</code> 를 사용하도록 합니다. 이를 위해서 물론 Google 계정정보를 입력할 필요가 있습니다.</p>

<h3>How to Test?</h3>

<p>  <a href="http://search.cpan.org/~rjbs/Email-Sender-0.110001/lib/Email/Sender/Manual/QuickStart.pm#Testing">Email::Sender::Manual::QuickStart</a> 문서를 확인 해보면 Testing 관련 내용이 나옵니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'>  <span class="k">use</span> <span class="nn">Test::</span><span class="n">More</span><span class="p">;</span>
</span><span class='line'>  <span class="k">BEGIN</span> <span class="p">{</span> <span class="nv">$ENV</span><span class="p">{</span><span class="n">EMAIL_SENDER_TRANSPORT</span><span class="p">}</span> <span class="o">=</span> <span class="s">&#39;Test&#39;</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">use</span> <span class="n">YourCode</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">YourCode</span><span class="o">-&gt;</span><span class="n">run</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">my</span> <span class="nv">@deliveries</span> <span class="o">=</span> <span class="nn">Email::Sender::</span><span class="n">Simple</span><span class="o">-&gt;</span><span class="n">default_transport</span><span class="o">-&gt;</span><span class="n">deliveries</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  위와같은 샘플코드가 제시되어 있는데,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">BEGIN</span> <span class="p">{</span> <span class="nv">$ENV</span><span class="p">{</span><span class="n">EMAIL_SENDER_TRANSPORT</span><span class="p">}</span> <span class="o">=</span> <span class="s">&#39;Test&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p> 가 지정되면, 실제로 메일 송신이 이뤄지지 않습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'>  <span class="k">my</span> <span class="nv">@deliveries</span> <span class="o">=</span> <span class="nn">Email::Sender::</span><span class="n">Simple</span><span class="o">-&gt;</span><span class="n">default_transport</span><span class="o">-&gt;</span><span class="n">deliveries</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  에서 그동안 송신한 메일건수당 성공실패를 판별할 수 있고, 작성된 메일 내용 또한 확인이 가능합니다. 테스트코드를 작성함에 있어서 위의 두 부분이 절대적으로 필요합니다.</p>

<p>  위처럼 테스트 코드를 작성할 시에는 실제로 메일 송신을 하지 않았기에 <code>transport</code> 레이어에서 발생하는 어떤 불상사는 감지할 수 없습니다.</p>

<h3>Conclusion</h3>

<ul>
<li><a href="http://jeen.tistory.com/entry/Perl-Perl-%EB%A1%9C-%EB%A9%94%EC%9D%BC%EB%B3%B4%EB%82%B4%EA%B8%B0-SSMTP-%EC%99%80-MIMELite-%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%B4%EC%84%9C">Perl 로 메일보내기 &#8230; SSMTP 와 MIME::Lite 를 사용해서!</a></li>
</ul>


<p>  이전에 메일보내기 관련해서 <code>SSMTP</code> + <code>MIME::Lite</code> 를 사용하는 그런 코드를 2008년쯤에 썼었네요. 부끄럽습니다. 2009년부터는 아마 <code>MIME::Lite</code> 를 안 썼던 것 같네요.</p>

<p>  뭐 당장 필요로 하는 부분만 구현을 한 것일 뿐인지라, 차후에 다른 어떤 요구사항이 있다면 그에 맞춰서 다시 한번 소개를 해볼까 합니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Catalyst - ActionRole]]></title>
    <link href="http://JEEN.github.com/blog/2011/12/27/catalyst-actionrole/"/>
    <updated>2011-12-27T21:14:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2011/12/27/catalyst-actionrole</id>
    <content type="html"><![CDATA[<h3>Action Role</h3>

<p>  오래된 이야기이지만 Catalyst 가 Moose 기반으로 만들어지면서 ActionRole 이라는 개념이 만들어졌었지요.
  실제 업무에서 적용해볼 껀덕지가 없어서 만져보지는 못했습니다만, 최근에 업무에서 ActionRole 을 적용해서 간단한 수정작업을 진행했습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">MyApp::Web::ActionRole::</span><span class="n">Logger</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Moose::</span><span class="n">Role</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">namespace::</span><span class="n">autoclean</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="n">execute</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$controller</span><span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  일단 업무에서 사용한 ActionRole 의 기본형은 위와 같습니다.</p>

<p>  Catalyst App 을 만들 때 사용한 네임스페이스를 기준으로 <code>ActionRole::[RoleName]</code> 을 사용합니다. 그러니 위에서 봤을 때 Catalyst App 의 이름은 <code>MyApp::Web</code> 이 되겠죠. 당연히 ActionRole 의 이름은 Logger 입니다.</p>

<p>  또한, Logger 라는 ActionRole 을 참조할 때, Catalyst 는 <code>MyApp::Web</code> 뿐만 아니라 <code>Catalyst::ActionRole::Logger</code> 가 있으면 이를 참조할 수 있습니다.
   <code>MyApp::Web::ActionRole::Logger</code> 와 <code>Catalyst::ActionRole::Logger</code> 두개가 존재할 시에는 앞의 <code>MyApp::Web::ActionRole::Logger</code> 를 우선적으로 사용하게 됩니다.</p>

<h3>주의점</h3>

<p>  위의 코드의 <code>after execute =&gt; sub { ... }</code> 에서 주의할 점이 한가지 있습니다. Catalyst 의 <code>auto</code>, <code>begin</code>, <code>end</code> 등의 Private Action 들 또한 실행이 된다는 점 입니다.
  예를들어 <code>/user/login</code> 이라는 수행하기 위해서 각 컨트롤러 마다 <code>auto</code>, <code>begin</code> 등의 Private Action 이 정의되어 있다고 하면, 아마 아래와 같이 나올 것입니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'>  <span class="o">.------------------------------------------------------------+-----------.</span>
</span><span class='line'><span class="o">|</span> <span class="n">Action</span>                                                     <span class="o">|</span> <span class="n">Time</span>      <span class="o">|</span>
</span><span class='line'><span class="o">+------------------------------------------------------------+-----------+</span>
</span><span class='line'><span class="o">|</span> <span class="o">/</span><span class="n">auto</span>                                                      <span class="o">|</span> <span class="mf">0.000600</span><span class="n">s</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="sr">/user/</span><span class="n">auto</span>                                                 <span class="o">|</span> <span class="mf">0.000208</span><span class="n">s</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="sr">/user/</span><span class="n">login</span>                                                <span class="o">|</span> <span class="mf">0.000219</span><span class="n">s</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span> <span class="sr">/user/</span><span class="n">end</span>                                                  <span class="o">|</span> <span class="mf">0.009542</span><span class="n">s</span> <span class="o">|</span>
</span><span class='line'><span class="o">|</span>  <span class="o">-&gt;</span> <span class="nn">MyApp::Web::View::</span><span class="n">Default</span><span class="o">-&gt;</span><span class="n">process</span>                    <span class="o">|</span> <span class="mf">0.008665</span><span class="n">s</span> <span class="o">|</span>
</span><span class='line'><span class="s">&#39;------------------------------------------------------------+-----------&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  애시당초 <code>/user/login</code> 가 끝나면 무엇무엇을 한다라고 <code>ActionRole::Logger</code> 에 정의한 마당에서 해당 액션이 2-3회 중복해서 실행되는 경우가 발생하는 것입니다. 바로 <code>auto</code>, <code>end</code> 가 끝난 다음에도 해당 ActionRole 을 참고한다는 것이죠.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">MyApp::Web::ActionRole::</span><span class="n">Logger</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Moose::</span><span class="n">Role</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">namespace::</span><span class="n">autoclean</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="n">execute</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span><span class="nv">$self</span><span class="p">,</span> <span class="nv">$controller</span><span class="p">,</span> <span class="nv">$c</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="k">if</span> <span class="nv">$self</span> <span class="o">=~</span><span class="sr"> /(?:auto|begin|end)/</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># ...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  그래서 적절하게 <code>auto</code>, <code>begin</code>, <code>end</code> 는 필터링해줍니다. <code>$self</code> 변수에 어떤 액션에서 온 것인지 알 수 있습니다. 전 처음에 계속 <code>$c-&gt;action</code> 으로 알고 착각을 했더랬습니다.</p>

<p>  아, 물론 ActionRole 을 추가해줬다고 바로 쓸 수 있는 것은 아닙니다.
  해당 ActionRole 을 사용할 컨트롤러의 기본 상속 모듈을 <code>Catalyst::Controller</code> 에서 <code>Catalyst::Controller::ActionRole</code> 로 바꾸도록 합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">MyApp::Web::Controller::</span><span class="n">Root</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">Moose</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">namespace::</span><span class="n">autoclean</span><span class="p">;</span>
</span><span class='line'><span class="k">BEGIN</span> <span class="p">{</span> <span class="n">extends</span> <span class="err">&#39;</span><span class="nn">Catalyst::Controller::</span><span class="n">ActionRole</span><span class="err">`</span> <span class="p">}</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Conclusion</h3>

<p>  위의 예제에서는 그냥 단순히 <code>Root</code> 에서만 사용하고 있는 것 처럼 보이지만, 업무상에서는  특정 컨트롤러 몇개를 제외한 나머지 모든 컨트롤러에서 공통으로 사용하고 있습니다.</p>

<p>  거의 모든 컨트롤러 상의 액션이 끝날 때, 시작될 때, 혹은 양쪽 모두에서 공통적으로 특정 행동을 정의할 때 ActionRole 과 함께하면 좀 더 유연하고 아름다운 코드작성에 도움이 되지 않을까 생각하고 있습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Plack::Middleware::OAuth]]></title>
    <link href="http://JEEN.github.com/blog/2011/12/27/using-plack-middleware-oauth/"/>
    <updated>2011-12-27T13:24:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2011/12/27/using-plack-middleware-oauth</id>
    <content type="html"><![CDATA[<h3>Before Using Plack::Middleware::OAuth</h3>

<p>  사실은 <a href="http://search.cpan.org/perldoc?Plack::Middleware::OAuth">Plack::Middleware::OAuth</a> 를 사용하기 이전에는 OAuth 관련 callback 처리등을 직접 파라메터를 확인해가면서 해당 액션을 처리했었습니다. 그게 P::M::OAuth 를 사용해서 각 OAuth Provider 들을 좀 더 유연하게 다룰 수 있게 되지 않았나 합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">sub </span><span class="nf">redirect_to_foursquare</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1"># redirect to foursquare authentication url</span>
</span><span class='line'>    <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">response</span><span class="o">-&gt;</span><span class="n">redirect</span><span class="p">(</span><span class="s">&quot;https://foursquare.com/oauth2/authenticate?client_id=$client_id&amp;response_type=code&amp;redirect_uri=$callback_url&quot;</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">sub </span><span class="nf">receive_token_foursquare</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="n">Furl</span><span class="o">-&gt;</span><span class="k">new</span><span class="o">-&gt;</span><span class="n">get</span><span class="p">(</span><span class="s">&quot;https://foursquare.com/oauth2/access_token?client_id=$client_id&amp;client_secret=$client_secret&amp;grant_type=authorization_code&amp;redirect_uri=$redirect_url&amp;code=&quot;</span><span class="o">.</span><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">request</span><span class="o">-&gt;</span><span class="n">param</span><span class="p">(</span><span class="s">&#39;code&#39;</span><span class="p">));</span>
</span><span class='line'>  <span class="o">...</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>  예, 뭐 위처럼 OAuth 인증시에 <code>client_id</code> 랑 <code>client_secret</code> 그리고 <code>grant_type</code> 등 여러가지 파라메터의 지정이나 인증 URL 등등이 Provider 마다 다르고 이러니 뭐 일일이 Provider 마다 매번 어플리케이션 단에서 코드를 써나가는 것이 참 불쾌하기 마련이었습니다.
  나름 플러거블하게 만든다고 해봤지만 역시 이런 부분은 Middleware 단에서 처리하는 게 좋지 않을까 생각하고 있었지요.
  그런의미에서 P::M::OAuth 를 사용하게 되었습니다.</p>

<h3>Custom Provider</h3>

<p>  P::M::OAuth 는 OAuth v1/v2 를 지원합니다. OAuth 버젼마다 파라메터가 바뀌기 때문에 사용하고자 하는 OAuth Provider 가 어떤 버젼을 지원하는 지 확인해봐야 합니다.
   P::M::OAuth 는 기본적으로 <em>Github</em>, <em>Twitter</em>, <em>Facebook</em>, <em>Live</em>, <em>Google</em> 의 다섯가지 OAuth Provider 를 지원합니다.</p>

<p>  저는 <em>FourSquare</em> 의 OAuth 를 사용하려고 하는 데, 기본적으로 제공해주지 않으니, 약간 손질을 해줘야 되겠죠.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">Plack::Middleware::OAuth::</span><span class="n">Foursquare</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">config</span> <span class="p">{</span>
</span><span class='line'>    <span class="o">+</span><span class="p">{</span>
</span><span class='line'>        <span class="n">version</span>          <span class="o">=&gt;</span> <span class="mi">2</span><span class="p">,</span>
</span><span class='line'>        <span class="n">authorize_url</span>    <span class="o">=&gt;</span> <span class="s">&#39;https://foursquare.com/oauth2/authenticate&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">access_token_url</span> <span class="o">=&gt;</span> <span class="s">&#39;https://foursquare.com/oauth2/access_token&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">response_type</span>    <span class="o">=&gt;</span> <span class="s">&#39;code&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">grant_type</span>       <span class="o">=&gt;</span> <span class="s">&#39;authorization_code&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  위처럼 <code>Plack::Middleware::OAuth::Foursquare</code> 와,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">Plack::Middleware::OAuth::UserInfo::</span><span class="n">Foursquare</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">parent</span> <span class="sx">qw(Plack::Middleware::OAuth::UserInfo)</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">LWP::</span><span class="n">UserAgent</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">JSON</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">create_handle</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">query</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$self</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$uri</span> <span class="o">=</span> <span class="n">URI</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span><span class="s">&#39;https://api.foursquare.com/v2/users/self&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$uri</span><span class="o">-&gt;</span><span class="n">query_form</span><span class="p">(</span> <span class="n">oauth_token</span> <span class="o">=&gt;</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">token</span><span class="o">-&gt;</span><span class="n">access_token</span> <span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$res</span> <span class="o">=</span> <span class="nn">LWP::</span><span class="n">UserAgent</span><span class="o">-&gt;</span><span class="k">new</span><span class="o">-&gt;</span><span class="n">get</span><span class="p">(</span><span class="nv">$uri</span><span class="p">);</span>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$body</span> <span class="o">=</span> <span class="nv">$res</span><span class="o">-&gt;</span><span class="n">decoded_content</span><span class="p">;</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">unless</span> <span class="nv">$body</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">my</span> <span class="nv">$obj</span> <span class="o">=</span> <span class="n">decode_json</span><span class="p">(</span><span class="nv">$body</span><span class="p">)</span> <span class="o">||</span> <span class="p">{};</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$obj</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">response</span><span class="p">}</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">user</span><span class="p">};</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  <code>Plack::Middleware::OAuth::UserInfo::Foursquare</code> 를 추가합니다.</p>

<p>  이렇게 쉽게 OAuth Provider 마다 해당 네임스페이스 맞는 모듈을 추가해줍니다.</p>

<h3>MyApp</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1"># ...</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$app</span> <span class="o">=</span> <span class="n">MyApp</span><span class="o">-&gt;</span><span class="n">psgi_app</span><span class="p">;</span>
</span><span class='line'><span class="n">builder</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">mount</span> <span class="s">&#39;/oauth&#39;</span> <span class="o">=&gt;</span> <span class="n">builder</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">enable</span> <span class="s">&#39;OAuth&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">on_success</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>                <span class="k">my</span> <span class="p">(</span><span class="nv">$mw</span><span class="p">,</span> <span class="nv">$token</span><span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1"># get Foursquare&#39;s UserInfo</span>
</span><span class='line'>                <span class="k">my</span> <span class="nv">$info</span> <span class="o">=</span> <span class="nn">Plack::Middleware::OAuth::</span><span class="n">UserInfo</span><span class="o">-&gt;</span><span class="k">new</span><span class="p">(</span> <span class="n">config</span> <span class="o">=&gt;</span> <span class="nv">$mw</span><span class="o">-&gt;</span><span class="n">config</span><span class="p">,</span> <span class="n">token</span> <span class="o">=&gt;</span> <span class="nv">$token</span> <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nv">$token</span><span class="o">-&gt;</span><span class="n">is_provider</span><span class="p">(</span><span class="s">&#39;Foursquare&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nv">$mw</span><span class="o">-&gt;</span><span class="n">redirect</span><span class="p">(</span><span class="s">&#39;/&#39;</span><span class="p">);</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>              <span class="n">on_error</span> <span class="o">=&gt;</span> <span class="k">sub </span><span class="p">{</span> <span class="c1">#... },</span>
</span><span class='line'>              <span class="n">providers</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s">&#39;Foursquare&#39;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>                      <span class="n">client_id</span> <span class="o">=&gt;</span> <span class="s">&#39;YOUR CLIENT_ID&#39;</span><span class="p">,</span>
</span><span class='line'>                      <span class="n">client_secret</span> <span class="o">=&gt;</span> <span class="s">&#39;YOUR CLIENT_SECRET&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="p">},</span>
</span><span class='line'>              <span class="p">};</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>    <span class="p">};</span>
</span><span class='line'>    <span class="n">mount</span> <span class="s">&#39;/&#39;</span> <span class="o">=&gt;</span> <span class="nv">$app</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>  대충 위처럼 사용을 합니다.
  좀 더 자세한 예제는 <a href="https://github.com/c9s/Plack-Middleware-OAuth/blob/develop/eg/app.psgi">P::M::OAuth 모듈의 예제 psgi 파일</a> 또는 , 이 모듈을 사용한 제 프로젝트 <a href="https://github.com/JEEN/Bobby-Akawa/blob/develop/lib/Bobby.pm#L46">Bobby-Akawa 의 특정 모듈</a>에서 찾아볼 수 있습니다.</p>

<h3>Conclusion</h3>

<p>  이로써 간략하게나마 Plack::Middleware::OAuth 를 이용해서 OAuth 인증을 Plack Middleware 단에서 구현할 수 있게 되었습니다. 조금 설명이 빈약해서 차후에 좀 더 구현단으로 들어가서 좀 더 깊게 파고들어가 볼까 합니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DBIx::Class - Using GIS Extensions]]></title>
    <link href="http://JEEN.github.com/blog/2011/12/26/dbix-class-using-gis-extensions/"/>
    <updated>2011-12-26T15:56:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2011/12/26/dbix-class-using-gis-extensions</id>
    <content type="html"><![CDATA[<h3>DBIx::Class 에서의 GIS!?</h3>

<p>  ORM 을 사용함에 있어서 단순한 SELECT 문은 그렇게 큰 고민없이 사용할 수 있습니다. 하지만 GIS Extension 을 사용한 쿼리들을 ORM 에서 사용한다면 일단 고민이 들어가기 마련입니다.</p>

<h3>DBIx::Class 로 사용할 GIS 용 Query 확인</h3>

<p>  우선 대상으로 할 테이블은 아래와 같습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">venue</span> <span class="p">(</span>
</span><span class='line'>  <span class="n">id</span>            <span class="nb">INT</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">PRIMARY</span> <span class="k">KEY</span> <span class="n">AUTO_INCREMENT</span><span class="p">,</span>
</span><span class='line'>  <span class="n">name</span>          <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="n">latitude</span>      <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">64</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="n">longitude</span>     <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">64</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="k">location</span>      <span class="n">Point</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="n">SPATIAL</span> <span class="k">INDEX</span><span class="p">(</span><span class="k">location</span><span class="p">),</span>
</span><span class='line'>  <span class="n">created_on</span>    <span class="n">DATETIME</span> <span class="k">NOT</span> <span class="k">NULL</span> <span class="k">DEFAULT</span> <span class="s1">&#39;0000-00-00 00:00:00&#39;</span>
</span><span class='line'><span class="p">)</span> <span class="n">ENGINE</span><span class="o">=</span><span class="n">MyISAM</span> <span class="k">DEFAULT</span> <span class="n">CHARSET</span> <span class="n">UTF8</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  위의 CREATE TABLE 문에서 알 수 있듯, <code>location</code> 이<em>SPATIAL INDEX</em> 를 사용하게 됩니다. 이제 이 <code>location</code> 컬럼을 대상으로 온갖 GIS 관련 쿼리를 ORM 에서 사용하게끔 합니다.</p>

<h3>INSERT</h3>

<p>  우선 DB 스키마는 덤프되어 있다고 가정하며 <code>Venue</code> 라는 결과 클래스에 데이터를 등록해보도록 합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'>  <span class="o">....</span>
</span><span class='line'>  <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">resultset</span><span class="p">(</span><span class="s">&#39;Venue&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">create</span><span class="p">({</span>
</span><span class='line'>      <span class="n">name</span>     <span class="o">=&gt;</span> <span class="s">&#39;Silex&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">latitude</span> <span class="o">=&gt;</span> <span class="s">&#39;32.123512&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">longitude</span> <span class="o">=&gt;</span> <span class="s">&#39;127.0123123&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="n">location</span>  <span class="o">=&gt;</span> <span class="o">\</span><span class="s">&quot;GeomFromText(&#39;POINT(32.123512 127.0123123)&#39;)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>  위와같은 코드로 <code>location</code> 에 대해서 Scalar Reference 를 지정함으로 GIS 관련 <code>GeomFromText</code> 라는 Function 을 사용할 수 있게 됩니다.</p>

<h3>SELECT</h3>

<p>  일단 위치정보의 등록은 위와같은 코드로 가능했고, 이제 결과값을 찾아보도록 합니다.
   인자로 사용될 값은 모바일기기의 화면단의 좌상단 Latitude/Longitude 좌표와 우하단 Latitude/Longitude 좌표입니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">...</span>
</span><span class='line'><span class="nv">$self</span><span class="o">-&gt;</span><span class="n">resultset</span><span class="p">(</span><span class="s">&#39;Venue&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">search</span><span class="p">({</span>
</span><span class='line'>    <span class="o">-</span><span class="ow">and</span> <span class="o">=&gt;</span> <span class="p">[</span>
</span><span class='line'>        <span class="o">\</span><span class="s">&quot;Intersects(location, Envelope(GeomFromText(&#39;LineString(32.0 127.0, 33.0 128.0)&#39;)))&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>  위처럼 또다시 Scalar Reference 의 힘을 빌려서 사태를 회피할 수 있습니다. 위의 코드로 좌상단의 점과 우하단의 점을 잇는 사각형의 영역에 대해서 결과를 얻어낼 수 있습니다.</p>

<h3>SELECT + ORDER_BY</h3>

<p>  여기까지는 그저 Scalar Reference 의 마법을 이용해서 잘도 헤쳐왔지만 이제부터가 문제입니다. 결과값을 뽑아낼 때에, 중점을 기준으로 결과값을 정렬해서 보여줄 필요가 생겼습니다.</p>

<p>  이제껏 <a href="http://search.cpan.org/perldoc?DBIx::Class">DBIx::Class</a> 를 사용하며 숱하게 회피방법을 연구해봤지만 도저히 답이 나오지 않아서 결국은 GIS 관련 등의 복잡한 쿼리에서 ORM 의 사용을 피하고 쌩 SQL 을 날릴 수 밖에 없었습니다만, 이런저런 시련의 세월 속에서 결국은 방법을 찾아냈습니다.</p>

<p>  그 방법이란 Dynamic View 를 이용하는 방법입니다. 일반적으로 View 를 만듬에 있어서 컬럼들의 비교나 의미가 정해진 정적인 값을 써서 미리 View 를 만들어서 사용하는 방법을 주로 사용해왔었는데, Dynamic View 를 통해서 해당 위치정보에 해당하는 값들을 바인딩해서 즉석에서 View 를 생성하는 방법입니다.</p>

<p>  우선은 <code>VenueComplex</code> 라는 View Table Class 를 작성합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">MyApp::Schema::Result::</span><span class="n">VenueComplex</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">base</span> <span class="sx">qw/DBIx::Class::Core/</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">table_class</span><span class="p">(</span><span class="s">&#39;DBIx::Class::ResultSource::View&#39;</span><span class="p">);</span>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">table</span><span class="p">(</span><span class="s">&#39;venue_complex&#39;</span><span class="p">);</span>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">result_source_instance</span><span class="o">-&gt;</span><span class="n">is_virtual</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">result_source_instance</span><span class="o">-&gt;</span><span class="n">view_definition</span><span class="p">(</span><span class="sx">q{</span>
</span><span class='line'><span class="sx">  SELECT v.*, SQRT(POW(ABS(X(v.location) - X(GeomFromText(?))), 2) + POW(ABS(Y(v.location) - Y(GeomFromText(?))), 2)) as distance FROM venue v WHERE Intersects(v.location, Envelope(GeomFromText(x))) ORDER BY distance asc</span>
</span><span class='line'><span class="sx">}</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">__PACKAGE__</span><span class="o">-&gt;</span><span class="n">add_columns</span><span class="p">(</span> <span class="o">...</span> <span class="p">);</span>
</span><span class='line'><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>  여타 컬럼정보, 릴레이션 설정등은 기존의 <code>Venue</code> 결과클래스에서 정의한 것을 그대로 사용하도록 합니다. 위의 view_definition 의 Prepared Statement SQL 에 바인딩 될 값은 3개입니다.</p>

<p>  자, 준비는 끝났으니, 이제 중점기준으로 값을 구해봅니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="k">my</span> <span class="p">(</span><span class="nv">$nw_lat</span><span class="p">,</span> <span class="nv">$nw_lng</span><span class="p">)</span> <span class="o">=</span> <span class="nb">split</span> <span class="s">&#39;,&#39;</span><span class="p">,</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">location1</span><span class="p">};</span>
</span><span class='line'><span class="k">my</span> <span class="p">(</span><span class="nv">$se_lat</span><span class="p">,</span> <span class="nv">$se_lng</span><span class="p">)</span> <span class="o">=</span> <span class="nb">split</span> <span class="s">&#39;,&#39;</span><span class="p">,</span> <span class="nv">$args</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">location2</span><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$center_point_x</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$se_lat</span> <span class="o">-</span> <span class="nv">$nw_lat</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">+</span> <span class="nv">$nw_lat</span><span class="p">;</span>
</span><span class='line'><span class="k">my</span> <span class="nv">$center_point_y</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$se_lng</span> <span class="o">-</span> <span class="nv">$nw_lng</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">+</span> <span class="nv">$nw_lng</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">my</span> <span class="nv">$r</span> <span class="o">=</span> <span class="nv">$self</span><span class="o">-&gt;</span><span class="n">resultset</span><span class="p">(</span><span class="s">&#39;VenueComplex&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="n">search</span><span class="p">({},</span> <span class="p">{</span>
</span><span class='line'>     <span class="nb">bind</span> <span class="o">=&gt;</span> <span class="p">[</span> <span class="s">&quot;POINT($center_point_x $center_point_y)&quot;</span><span class="p">,</span>
</span><span class='line'>               <span class="s">&quot;POINT($center_point_x $center_point_y)&quot;</span><span class="p">,</span>
</span><span class='line'>               <span class="s">&quot;LineString($nw_lat $nw_lng , $se_lat $se_lng)&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="p">],</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>  기존의 <code>Venue</code> 클래스가 아닌 <code>VenueComplex</code> 로 대상을 바꾸고, bind 로 세개의 값을 넘겨줍니다. 중점기준으로 정렬은 위의 <code>VenueComplex</code> 의 SQL 상에서 처리하고 있습니다.</p>

<h3>Conclusion</h3>

<p>  ORM 을 사용할 때에는 수많은 장점에도 불구하고 아직까지 논의되고 있는 수많은 단점들을 명확하게 인지해야 합니다. 상황에 맞게 쓰는 것이 당연히 중요하겠죠.
  위에서 제가 제시한 코드들이 바른 길이라고는 장담할 수 없겠습니다만, 다양한 요구사항을 수렴할 수 있다면 그걸로 괜찮다고 그냥 생각하고 있습니다.</p>
]]></content>
  </entry>
  
</feed>
