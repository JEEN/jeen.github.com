<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cpan | Jeen's techlog]]></title>
  <link href="http://JEEN.github.com/blog/categories/cpan/atom.xml" rel="self"/>
  <link href="http://JEEN.github.com/"/>
  <updated>2012-02-08T16:37:01+09:00</updated>
  <id>http://JEEN.github.com/</id>
  <author>
    <name><![CDATA[Jeen Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CPANRatings - WebService::Aladdin]]></title>
    <link href="http://JEEN.github.com/blog/2012/02/08/cpanratings-webservice-aladdin/"/>
    <updated>2012-02-08T16:27:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/02/08/cpanratings-webservice-aladdin</id>
    <content type="html"><![CDATA[<blockquote class="twitter-tweet" data-in-reply-to="166961671741521922"><p>@<a href="https://twitter.com/keedi">keedi</a> @<a href="https://twitter.com/gypark">gypark</a> 오오오... 가문의 영광!!!</p>&mdash; JEEN (@JEEN_LEE) <a href="https://twitter.com/JEEN_LEE/status/167063345000755200" data-datetime="2012-02-08T01:52:59+00:00">February 8, 2012</a></blockquote>


<p> 새벽에 @keedi 님으로부터 트윗을 받고 알게되었습니다. 인생 처음으로 <a href="http://cpanratings.perl.org/">CPANRatings</a> 에서 Rating 을 받아보는 군요. 그것도 별 다섯개.</p>

<ul>
<li><p><a href="http://cpanratings.perl.org/dist/WebService-Aladdin">http://cpanratings.perl.org/dist/WebService-Aladdin</a></p>

<p>아, CPANRatings 는 CPAN 에 올라온 모듈들에 평가를 남길 수 있는 곳입니다.</p>

<p>Rating 은 @gypark 님으로부터 였습니다. 제가 얼기설기 CPAN 에 모듈 올려보겠답시고 2007년쯤에 올린 모듈이고, 저 조차도 잠깐 쓰다가 뭐 당장 쓸일이 없어서 내팽개쳐뒀지만 말이죠.. =3</p>

<p>아무튼 의욕이 새록새록 돋습니다.</p>

<p>오늘은 @keedi 님께 어제 올린 <a href="http://metacpan.org/module/Date::Holidays::KR">Date::Holidays::KR</a> 에 Repository 정보가 없다는 말을 듣고, 흡... 해서 나머지 모듈들도 전부 Repository 정보를 추가해보려고 합니다.</p>

<p>Date::Holidays::KR 에 Repository 가 없는 이유는 META.yml 이 없어서 였던 듯...</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Date::Holidays::KR Released]]></title>
    <link href="http://JEEN.github.com/blog/2012/02/07/date-holidays-kr-0-dot-01-released/"/>
    <updated>2012-02-07T20:28:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/02/07/date-holidays-kr-0-dot-01-released</id>
    <content type="html"><![CDATA[<p>  회사의 경영자 @y0ngbin 께서 <code>is_bizday</code> 라는 스크립트를 만들어서 쓰는 것을 보고 호오 했었는데...</p>

<p>  <script src="https://gist.github.com/1646007.js?file=is_bizday.pl"></script></p>

<p>  알고보니 내용인즉슨 HTTP Request 를 날리고 그 결과를 파싱하는 일을 하고 있다는 것을 알고, 급히 <a href="http://metacpan.org/module/Date::Holidays::KR">Date::Holidays::KR</a> 이라는 모듈을 만들기로 했습니다... 랄까 사실은 작년부터 떠밀려온 <code>Things</code> 의 이슈 중 하나였습니다.</p>

<p>  사실 일본같은 경우에는 음력이 옛날에 없어져버렸고, 지금은 양력만으로 돌고 있고, 중국은 한국과 마찬가지로 음력을 사용하고 있습니다. 재미삼아서 여러나라의 공휴일을 살펴봤는데, 대개 정해진 날, 또는 몇 월의 몇번째 주의 월요일이라든가 하는 식으로 공휴일이 지정되어 있는 것을 봤습니다.
  캐나다의 경우는 주마다 휴일이 다르더군요. :-)</p>

<p>  아무튼 같은 음력을 사용하는 중국, 그 중국용으로 만든 <a href="http://metacpan.org/module/Date::Holidays::CN">Date::Holidays::CN</a> 을 참고해서 <code>Date::Holidays::KR</code> 을 만들었습니다. 음력도 미묘하게 중국과는 다르다고 하는데, 이 부분은 @aer0 님께서 만드신 <a href="http://metacpan.org/module/Date::Korean">Date::Korean</a> 모듈을 사용해서 음력/양력 변환을 이용했구요. (설날,추석,석가탄신일의 경우는 음력)</p>

<blockquote class="twitter-tweet"><p>Date-Holidays-KR 0.01 by JEEN - <a href="http://t.co/pHQVHLaJ" title="http://metacpan.org/release/JEEN/Date-Holidays-KR-0.01/">metacpan.org/release/JEEN/D…</a></p>&mdash; CPAN New Modules (@cpan_new) <a href="https://twitter.com/cpan_new/status/166840689223675904" data-datetime="2012-02-07T11:08:14+00:00">February 7, 2012</a></blockquote>




<blockquote class="twitter-tweet"><p>Date-Holidays-KR 0.02 by JEEN - <a href="http://t.co/mgouifly" title="http://metacpan.org/release/JEEN/Date-Holidays-KR-0.02/">metacpan.org/release/JEEN/D…</a></p>&mdash; CPAN New Modules (@cpan_new) <a href="https://twitter.com/cpan_new/status/167066106622771200" data-datetime="2012-02-08T02:03:58+00:00">February 8, 2012</a></blockquote>


<p>  어제 0.01 올리다가 <code>Makefile.PL</code> 에 의존모듈을 안정해놨구나 해서 추가해서 다시 올려놨습니다.</p>

<p>``` diff
diff --git a/Makefile.PL b/Makefile.PL
index 7b27280..fef5219 100644
--- a/Makefile.PL
+++ b/Makefile.PL
@@ -2,7 +2,7 @@ use inc::Module::Install;
 name 'Date-Holidays-KR';
 all_from 'lib/Date/Holidays/KR.pm';</p>

<p>-# requires '';
+requires 'Date::Korean';</p>

<p> tests 't/*.t';
 author_tests 'xt';
 ```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Carton - CPAN dependencies manager]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/16/carton-cpan-dependencies-manager/"/>
    <updated>2012-01-16T22:49:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/16/carton-cpan-dependencies-manager</id>
    <content type="html"><![CDATA[<p>  Jenkins 이야기를 마저 쓸려고 했는 데, 그 사이사이에 사용된 것들부터 정리하고자 우선은 Carton 이야기 부터 먼저하고자 합니다.</p>

<p>  잘은 모르지만 Carton 은 Ruby 의 Bundler 에 영감을 받아서 만들어 진 것입니다. 어떤 Perl 로 만든 소프트웨어의 의존모듈의 관리가 편해집니다. :-) 일례로, 노트북에서 개발을 하고 이것을 서버에 올릴려고 할 때, 일일이 의존모듈 체크를 해야할 필요성이 있습니다. 그때마다 <code>cpan MODULE</code> 등으로 설치를 해나가야 한다면 여간 힘든 일이 아니죠.</p>

<p>  그런 상황에서 쉽게 문제를 해결할 수 있는 것이 <code>Carton</code> 이 아닐까 생각합니다.</p>

<h3>Carton 설치</h3>

<p>  <code>Carton</code> 은 간단하게 <code>cpan</code> 으로 설치할 수 있습니다.</p>

<p><code>bash
$ cpanm carton
</code></p>

<p>  위의 커맨드로 <code>Carton</code> 을 설치하면 <code>carton</code> 이라는 커맨드가 생깁니다.</p>

<h3>Carton 이용</h3>

<p>  <code>Carton</code> 을 제대로 이용하려면, 해당 Perl App 의 의존모듈이 <code>Makefile.PL</code> 안에서 잘 관리되고 있어야 합니다.</p>

<p>``` perl Makefile.PL
use ExtUtils::MakeMaker;
WriteMakefile(</p>

<pre><code>'NAME'      =&gt; 'WebService::Aladdin',
'AUTHOR'    =&gt; 'JEEN &lt;jeen@perl.kr&gt;',
'VERSION_FROM' =&gt; 'lib/WebService/Aladdin.pm', # finds $VERSION
'PREREQ_PM' =&gt; {
    Test::Base =&gt; 0,
    version    =&gt; 0,
    Class::Accessor::Fast =&gt; 0,
    LWP::UserAgent =&gt; 0,
    URI            =&gt; 0,
    Carp           =&gt; 0,
    XML::FeedPP    =&gt; 0
},
</code></pre>

<p>);
```</p>

<p>  우선 예제로 제가 만든 <code>WebService::Aladdin</code> 모듈의 <code>Makefile.PL</code> 이 위와 같습니다. 이는 <code>WebService::Aladdin</code> 모듈에서 필요로 하는 의존모듈 등의 정보들을 나타내고 있습니다.</p>

<p><code>bash
$ carton install
</code></p>

<p>  <code>carton install</code> 을 통해서 <code>Makefile.PL</code> 에 정의된 의존모듈을 설치합니다. 이때 <code>Carton</code> 은 의존모듈의 의존트리까지도 설치해버립니다. 그러니 실제 의존모듈이 10개라도, 그 10개의 각각의 모듈의 의존모듈까지도 설치하기 때문에 실제로 설치되는 것은 10개 이상의 모듈들이 될 것입니다.</p>

<p>  아무튼 <code>carton install</code> 이 끝났다면 <code>carton.lock</code> 파일이 생성됩니다. 그리고 <code>local</code> 이라는 디렉토리의 아래에 의존모듈들이 설치됩니다.</p>

<p>``` text carton.lock
{
   "modules" : {</p>

<pre><code>  "Algorithm::Diff" : {
     "dist" : "Algorithm-Diff-1.1902",
     "module" : "Algorithm::Diff",
     "mymeta" : {
        "abstract" : "unknown",
        "author" : [
           "unknown"
        ],
        "dynamic_config" : 0,
        "generated_by" : "ExtUtils::MakeMaker version 6.62, CPAN::Meta::Converter version 2.112621, CPAN::Meta::Converter version 2.112150",
        "license" : [
           "unknown"
        ],
        "meta-spec" : {
           "url" : "http://search.cpan.org/perldoc?CPAN::Meta::Spec",
           "version" : "2"
        },
        "name" : "Algorithm-Diff",
        "no_index" : {
           "directory" : [
              "t",
              "inc"
           ]
        },
        "prereqs" : {
           "build" : {
              "requires" : {
                 "ExtUtils::MakeMaker" : 0
              }
           },
           "configure" : {
              "requires" : {
                 "ExtUtils::MakeMaker" : 0
              }
           },
           "runtime" : {
              "requires" : {}
           }
        },
        "release_status" : "stable",
        "version" : "1.1902"
     },
     "name" : "Algorithm::Diff",
     "pathname" : "T/TY/TYEMQ/Algorithm-Diff-1.1902.tar.gz",
     "provides" : {
        "Algorithm::Diff" : {
           "file" : "Algorithm/Diff.pm",
           "version" : "1.1902"
        },
        "Algorithm::DiffOld" : {
           "file" : "Algorithm/DiffOld.pm",
           "version" : "1.1"
        }
     },
     "version" : "1.1902"
  },
  ...
</code></pre>

<p>   }
}
```</p>

<p>  이후 <code>Makefile.PL</code> 에서 또다른 의존모듈이 추가되었을 시에, 또다시</p>

<p><code>bash
$ carton install
</code></p>

<p>을 통해서 추가의존모듈을 설치할 수 있습니다. 이렇게 <code>carton install</code> 로 설치된 로컬 모듈들은</p>

<p><code>bash
$ carton list
IO-stringy-2.110
File-Listing-6.03
XML-FeedPP-0.43
CPAN-Meta-2.112621
...
</code></p>

<p>  <code>carton list</code> 로 확인할 수 있습니다.</p>

<p>  그리고 <code>carton exec</code> 를 통해서 로컬모듈에 설치된 의존모듈을 참조해서 실행할 수 있습니다. 일례로 <code>Catalyst</code> 나 <code>Dancer</code> 로 만든 WebApp 들을 위에서 설명한 대로 <code>carton install</code> 한다음,</p>

<p><code>bash
$ carton exec -- plackup -a app.psgi -p 3000 --mode production
</code></p>

<p>  이처럼 <code>carton exec</code> 를 통해서 실행할 수 있지요.</p>

<h3>Carton 을 이용하고서...</h3>

<p>  우선은 Carton 을 이용함으로, 한 어플리케이션 당 하나의 모듈참조장소를 가지게해서 여러 어플리케이션이 혼잡한 경우에 발생할 수 있는 부작용을 예방할 수 있습니다. <code>Makefile.PL</code> 에서 해당 모듈의 버젼을 지정함으로 특정 버젼에 대해서만 의존을 가질 수 있기 때문에 더더욱 이런 면에서는 효과적입니다.</p>

<p>  그래서 저같은 경우는 오히려 서비스마다 그 서비스용 계정을 만들고 <code>perlbrew</code> 환경을 갖추는 것보다 가볍게 서비스용 계정은 하나만 가지며 각 서비스디렉토리마다 <code>Carton</code> 을 올리는 쪽으로 움직이고 있습니다. 그러니 굳이 시스템 펄을 사용하는 것이 큰 거부감을 느끼지 않게 되었네요.</p>

<h3>그 외</h3>

<p>  일단 <code>carton.lock</code> 에 기재된 의존모듈 정보가 많으면 많을수록 <code>carton install</code> 에 걸리는 시간은 더 오래걸리게 됩니다. 물론 Carton 이 기본적으로 외부미러(http://cpan.metacpan.org) 를 사용하고 있기에, 그럴 수도 있겠다 싶어서 코드를 한번 훑어봤는데, 마침 <code>PERL_CARTON_MIRROR</code> 라는 환경변수를 통해서 가까운 혹은 로컬 네트워크 안의 CPAN 미러를 지정해줌으로 많은 시간을 단축할 수 있지 않을까 생각해봅니다.</p>

<h3>Conclusion</h3>

<p>  물론 Carton 은 현재 ALPHA 퀄리티라고 합니다. 버젼도 현재(2012-01-16) 로는 0.9.3 이고, 1.0 정식 릴리즈까지는 아직 시간이 남아있습니다. 몇몇 기능이 바뀔거라는 주의사항이 <a href="http://metacan.org/module/Carton">Carton 모듈페이지</a> 에서 확인할 수 있습니다.</p>

<p>  좀 더 다양한 <code>Carton</code> 에 대한 이야기는 작년 <a href="http://yapcasia.org/2011/talk/91">YAPC::Asia2011 의 Carton Talk Page</a> 에서도 확인하실 수 있습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FreeBSD 8.2 STABLE - CPAN Error]]></title>
    <link href="http://JEEN.github.com/blog/2012/01/05/freebsd-8-dot-2-stable-cpan-error/"/>
    <updated>2012-01-05T22:32:00+09:00</updated>
    <id>http://JEEN.github.com/blog/2012/01/05/freebsd-8-dot-2-stable-cpan-error</id>
    <content type="html"><![CDATA[<p>  회사업무차 <code>FreeBSD 8.2 STABLE</code> OS 를 사용하는 서버에서 CPAN 사용시 에러가 발생했습니다.</p>

<p>``` bash
$ cpan Module::Install
Reading '/home/jeen/.cpan/sources/authors/01mailrc.txt.gz'
............................................................................DONE
Reading '/home/jeen/.cpan/sources/modules/02packages.details.txt.gz'
  Database was generated on Thu, 05 Jan 2012 05:12:02 GMT
............................................................................DONE
Reading '/home/jeen/.cpan/sources/modules/03modlist.data.gz'
Can't locate object method "data" via package "CPAN::Modulelist" (perhaps you forgot to load "CPAN::Modulelist"?) at (eval 24) line 1.
 at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Index.pm line 524</p>

<pre><code>CPAN::Index::rd_modlist('CPAN::Index', '/home/jeen/.cpan/sources/modules/03modlist.data.gz') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Index.pm line 85
CPAN::Index::reload('CPAN::Index') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN.pm line 976
CPAN::exists('CPAN=HASH(0x801fe27f8)', 'CPAN::Module', 'Module::Install') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Shell.pm line 1256
CPAN::Shell::expandany('CPAN::Shell', 'Module::Install') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Shell.pm line 1681
CPAN::Shell::rematein('CPAN::Shell', 'install', 'Module::Install') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/CPAN/Shell.pm line 1977
CPAN::Shell::__ANON__('CPAN::Shell', 'Module::Install') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/App/Cpan.pm line 459
App::Cpan::__ANON__('Module::Install') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/App/Cpan.pm line 468
App::Cpan::_default('ARRAY(0x800e92780)', 'HASH(0x801fe7d38)') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/App/Cpan.pm line 386
App::Cpan::run('App::Cpan', 'Module::Install') called at /home/jeen/perl5/perlbrew/perls/perl-5.14.2/bin/cpan line 11
</code></pre>

<p>```</p>

<p>  마땅히 어떻게 <code>cpan</code> 자체가 안되니, 다른 CPAN 모듈 설치도 안되고...</p>

<p><code>bash
$ curl -L http://cpanmin.us | perl - --self-upgrade
</code></p>

<p>  그래서 일단은 그냥 <code>cpanm</code> 을 설치하고 필요한 모듈들을 설치했습니다. 하지만 여전히 <code>cpan</code> 으로 모듈을 설치하려면 위처럼 에러가 뜨니 아직도 찜찜하기 그지 없네요.</p>

<p><code>bash
$ uname -a
FreeBSD xxx.xxxxx.kr 8.2-STABLE FreeBSD 8.2-STABLE #1: Wed Apr 13 13:10:49 KST 2011     root@xxx.xxxx.kr:/usr/obj/usr/src/sys/GENERIC  amd64
</code></p>

<p>``` bash
$ perl -V
Summary of my perl5 (revision 5 version 14 subversion 2) configuration:</p>

<p>  Platform:</p>

<pre><code>osname=freebsd, osvers=8.2-stable, archname=amd64-freebsd
uname='freebsd xxx.xxxxx.kr 8.2-stable freebsd 8.2-stable #1: wed apr 13 13:10:49 kst 2011 root@xxx.xxxx.kr:usrobjusrsrcsysgeneric amd64 '
config_args='-de -Dprefix=/home/jeen/perl5/perlbrew/perls/perl-5.14.2'
hint=recommended, useposix=true, d_sigaction=define
useithreads=undef, usemultiplicity=undef
useperlio=define, d_sfio=undef, uselargefiles=define, usesocks=undef
use64bitint=define, use64bitall=define, uselongdouble=undef
usemymalloc=n, bincompat5005=undef
</code></pre>

<p>  Compiler:</p>

<pre><code>cc='cc', ccflags ='-DHAS_FPSETMASK -DHAS_FLOATINGPOINT_H -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include',
optimize='-O',
cppflags='-DHAS_FPSETMASK -DHAS_FLOATINGPOINT_H -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include'
ccversion='', gccversion='4.2.1 20070719  [FreeBSD]', gccosandvers=''
intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678
d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16
ivtype='long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8
alignbytes=8, prototype=define
</code></pre>

<p>  Linker and Libraries:</p>

<pre><code>ld='cc', ldflags ='-Wl,-E  -fstack-protector -L/usr/local/lib'
libpth=/usr/lib /usr/local/lib
libs=-lm -lcrypt -lutil -lc
perllibs=-lm -lcrypt -lutil -lc
libc=, so=so, useshrplib=false, libperl=libperl.a
gnulibc_version=''
</code></pre>

<p>  Dynamic Linking:</p>

<pre><code>dlsrc=dl_dlopen.xs, dlext=so, d_dlsymun=undef, ccdlflags=' '
cccdlflags='-DPIC -fPIC', lddlflags='-shared  -L/usr/local/lib -fstack-protector'
</code></pre>

<p>Characteristics of this binary (from libperl):
  Compile-time options: PERL_DONT_CREATE_GVSV PERL_MALLOC_WRAP</p>

<pre><code>                    PERL_PRESERVE_IVUV USE_64_BIT_ALL USE_64_BIT_INT
                    USE_LARGE_FILES USE_PERLIO USE_PERL_ATOF
</code></pre>

<p>  Built under freebsd
  Compiled at Jan  5 2012 15:51:41
  %ENV:</p>

<pre><code>PERLBREW_BASHRC_VERSION="0.39"
PERLBREW_HOME="/home/jeen/.perlbrew"
PERLBREW_MANPATH="/home/jeen/perl5/perlbrew/perls/perl-5.14.2/man"
PERLBREW_PATH="/home/jeen/perl5/perlbrew/bin:/home/jeen/perl5/perlbrew/perls/perl-5.14.2/bin"
PERLBREW_PERL="perl-5.14.2"
PERLBREW_ROOT="/home/jeen/perl5/perlbrew"
PERLBREW_VERSION="0.39"
</code></pre>

<p>  @INC:</p>

<pre><code>/home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/site_perl/5.14.2/amd64-freebsd
/home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/site_perl/5.14.2
/home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2/amd64-freebsd
/home/jeen/perl5/perlbrew/perls/perl-5.14.2/lib/5.14.2
.
</code></pre>

<p>```</p>

<p><code>bash
$ df -Th .
Filesystem   Type    Size    Used   Avail Capacity  Mounted on
/dev/ar0s1f  ufs      43G    5.1G     35G    13%    /usr
</code></p>

<p>  일단 사건해결에 도움이 될 만한 정보들은 모조리 뽑아봤습니다.
  천천히 살펴보며 구원을 요청해야 되겠네요.</p>

<h3>Conclusion</h3>

<p>  <a href="http://webchat.freenode.net?channels=perl-kr">#perl-kr</a> 에서 위에 정리한 내용들로 <a href="http://twitter.com/aer0">@aer0</a> 님께 질문을 날렸습니다. @aer0 님께서 제안하신 방법으로</p>

<ul>
<li><code>Bundle::CPAN</code> 을 설치</li>
<li><p><code>~/.cpan</code> 디렉토리를 삭제 후 다시 <code>cpan</code> 실행</p>

<p>이었습니다.</p>

<p><code>Bundle::CPAN</code> 을 설치해도 사태가 해결되지 않아서, 결국은 <code>~/.cpan</code> 디렉토리를 삭제한 후 다시 <code>cpan</code> 을 실행했습니다.</p></li>
<li><p>~/.cpan/sources/modules/02packages.details.txt.gz</p></li>
<li><p>~/.cpan/sources/modules/03modlist.data.gz</p>

<p>같은 CPAN 미러에서 가져오는 인덱스 파일이 이상해서 꼬인 것 같다라는 @aer0 님의 총평이었습니다.</p>

<p>역시 이런 사건이 발생할 때는 <code>#perl-kr</code> 에 들러야 됩니다. :-)</p></li>
</ul>


<blockquote class="twitter-tweet" data-in-reply-to="154824190581678081" lang="ko"><p>@<a href="https://twitter.com/JEEN_LEE">JEEN_LEE</a> 자문자답 <a href="http://t.co/hSGdHz9i" title="http://jeen.github.com/blog/2012/01/05/freebsd-8-dot-2-stable-cpan-error/">jeen.github.com/blog/2012/01/0…</a></p>&mdash; JEEN (@JEEN_LEE) <a href="https://twitter.com/JEEN_LEE/status/154930926294536192" data-datetime="2012-01-05T14:23:05+00:00">1월 5, 2012</a></blockquote>



]]></content>
  </entry>
  
</feed>
